# Copyright (C) 2017 Liu, Yuanyuan (liuyuanyuan@highgo.com)

ArrayTransformer.general.description = 将复杂的数组元素作为一组独立的列进行评估

BinaryTransformer.general.description           = 以二进制数据表示字符串值。
BinaryTransformer.property.encoding.description = 用来将字符串值解码为字节的字符编码。
BinaryTransformer.property.encoding.label       = 字符编码
BinaryTransformer.property.format.description   = 二进制值格式
BinaryTransformer.property.format.label         = 二进制格式

BooleanTransformer.general.description = 将数字表示为布尔值。

Bundle-Name = DBeaver模型

ComplexTypeTransformer.general.description = 将复杂类型的属性显示为单独的列

DateFormatter.date.general.label                             = 常规
DateFormatter.date.general.pattern.description               = 日期模式
DateFormatter.date.general.pattern.label                     = 模式
DateFormatter.date.label                                     = 日期
DateFormatter.number.general.grouping.description            = 在该格式中使用分组
DateFormatter.number.general.grouping.label                  = 使用分组
DateFormatter.number.general.groupingSize.description        = 指定数字整数部分中分组分隔符之间的位数。
DateFormatter.number.general.groupingSize.label              = 分组大小
DateFormatter.number.general.label                           = 常规
DateFormatter.number.general.maxFractDigits.description      = 最多小数位数
DateFormatter.number.general.maxFractDigits.label            = 最多小数位数
DateFormatter.number.general.maxIntDigits.description        = 最大整数位数
DateFormatter.number.general.maxIntDigits.label              = 最大整数位数
DateFormatter.number.general.minFractDigits.description      = 最少小数位数
DateFormatter.number.general.minFractDigits.label            = 最少小数位数
DateFormatter.number.general.minIntDigits.description        = 最小整数位数
DateFormatter.number.general.minIntDigits.label              = 最小整数位数
DateFormatter.number.general.nativeSpecialValues.description = 对特殊值使用本机格式（例如 NaN、Infinity、-Infinity）
DateFormatter.number.general.nativeSpecialValues.label       = 对特殊值使用本机格式
DateFormatter.number.general.roundingMode.description        = 取整模式
DateFormatter.number.general.roundingMode.label              = 取整模式
DateFormatter.number.general.useTypeScale.description        = 使用列或属性数据类型的小数位数作为最小的小数位数
DateFormatter.number.general.useTypeScale.label              = 使用数据类型的小数位数
DateFormatter.number.label                                   = 数字
DateFormatter.time.general.label                             = 常规
DateFormatter.time.general.pattern.description               = 时间模式
DateFormatter.time.general.pattern.label                     = 模式
DateFormatter.time.general.timezone.description              = 时间的时区。如果没有设置，则使用值本身的时区。
DateFormatter.time.general.timezone.label                    = 时区
DateFormatter.time.label                                     = 时间
DateFormatter.timestamp.general.label                        = 常规
DateFormatter.timestamp.general.pattern.description          = 时间戳模式
DateFormatter.timestamp.general.pattern.label                = 模式
DateFormatter.timestamp.general.timezone.description         = 时间戳的时区。如果没有设置，则使用值本身的时区。
DateFormatter.timestamp.general.timezone.label               = 时区
DateFormatter.timestamp.label                                = 时间戳
DateFormatter.timestamptz.label                              = 带时区的时间戳
DateFormatter.timetz.label                                   = 带时区的时间

EpochTimeTransformer.general.description             = 将整数值表示为 Epoch（C、Unix、POSIX、Java 等）时间中的时间戳 - 自 1970/01/01 00:00:00 (UTC) 以来经过的秒数
EpochTimeTransformer.property.timezoneID.description = 时区ID。默认使用本地机器的时区。\n有3种方法来指定时区：\n	-与本地时区的偏移(+3, -04:30)\n	-与指定时区的偏移(GMT+2, UTC+01:00)\n	-基于区域的设置(UTC, ECT, PST, etc)
EpochTimeTransformer.property.unit.description       = 测量单位 - 秒、毫秒等

MapTransformer.general.description = 将结构/映射作为一组单独的列进行评估

NumericTransformer.property.lenient.description = 此转换器是否应忽略转换错误并显示原始值而不是错误
NumericTransformer.property.lenient.label       = 宽松
NumericTransformer.property.type.description    = 字符串将转换为的数字类型
NumericTransformer.property.type.label          = 类型

RadixTransformer.general.description = 以指定的基数表示数字。

URLTransformer.general.description          = 将值表示为 URL。 提供带有内嵌网络浏览器的预览面板。
URLTransformer.property.pattern.description = URL模式。变量 ${value} 将被替换为实际值。
URLTransformer.property.pattern.label       = URL 模式

UUIDTransformer.general.description       = 以 UUID 形式表示二进制值。
UUIDTransformer.property.case.description = 小写或大写字符。
UUIDTransformer.property.case.label       = 大小写
UUIDTransformer.property.type.description = 您可以选择 版本1（大端字节序）、版本1（混合字节序）\n  或有序（如果使用优化存储）版本的 UUID。
UUIDTransformer.property.type.label       = UUID 类型

extension-point.org.jkiss.dbeaver.aggregateFunction.name = 聚集函数
extension-point.org.jkiss.dbeaver.application.name       = DBeaver 应用程序
extension-point.org.jkiss.dbeaver.dataFormatter.name     = 数据格式器
extension-point.org.jkiss.dbeaver.dataTypeProvider.name  = 数据类型提供者
extension-point.org.jkiss.dbeaver.navigator.name         = 对象导航器扩展
extension-point.org.jkiss.dbeaver.pluginService.name     = 插件服务
extension-point.org.jkiss.dbeaver.serialize.name         = 对象序列化器

meta.org.jkiss.dbeaver.model.DBPNamedObject.name.name                                       = 名称
meta.org.jkiss.dbeaver.model.DBPObjectWithDescription.description.name                      = 对象描述（注释）
meta.org.jkiss.dbeaver.model.DBPScriptObject.objectDefinitionText.name                      = 定义
meta.org.jkiss.dbeaver.model.data.DBDValueLocator.entity.name                               = 表
meta.org.jkiss.dbeaver.model.data.DBDValueLocator.uniqueKey.name                            = 键
meta.org.jkiss.dbeaver.model.exec.plan.DBCPlanNode.nodeDisplayName.name                            = 名称
meta.org.jkiss.dbeaver.model.impl.auth.AuthModelDatabaseNativeCredentials.userName.name     = 用户名
meta.org.jkiss.dbeaver.model.impl.auth.AuthModelDatabaseNativeCredentials.userPassword.name = 用户密码
meta.org.jkiss.dbeaver.model.impl.local.LocalResultSetColumn.autoGenerated.name             = 生成的
meta.org.jkiss.dbeaver.model.impl.local.LocalResultSetColumn.entityName.name                = 实体
meta.org.jkiss.dbeaver.model.impl.local.LocalResultSetColumn.label.name                     = 标签
meta.org.jkiss.dbeaver.model.impl.local.LocalResultSetColumn.ordinalPosition.name           = #
meta.org.jkiss.dbeaver.model.impl.local.LocalResultSetColumn.typeName.name                  = 类型
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.autoGenerated.name               = 自动生成的
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.description.name                 = 描述
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.maxLength.description            = 最大列长度
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.maxLength.name                   = 长度
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.name.name                        = 列名
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.ordinalPosition.name             = #
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.precision.name                   = 精度
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.required.name                    = 非空
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.scale.description                = 数值数据类型的标度（小数位数的最大值）
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.scale.name                       = 标度
meta.org.jkiss.dbeaver.model.impl.struct.AbstractAttribute.typeName.name                    = 数据类型
meta.org.jkiss.dbeaver.model.impl.struct.AbstractProcedure.description.name                 = 存储过程描述
meta.org.jkiss.dbeaver.model.impl.struct.AbstractProcedure.name.name                        = 存储过程名称
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTable.name.name                            = 表名称
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTableConstraint.constraintType.name        = 类型
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTableConstraint.name.name                  = 名称
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTableConstraint.table.name                 = 所有者
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTableIndex.primary.name                    = 主键
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTrigger.actionTiming.name                  = 时机
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTrigger.description.name                   = 触发器描述
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTrigger.manipulationType.name              = 类型
meta.org.jkiss.dbeaver.model.impl.struct.AbstractTrigger.name.name                          = 触发器名称
meta.org.jkiss.dbeaver.model.navigator.DBNDatabaseFolder.name.name                          = 名称
meta.org.jkiss.dbeaver.model.navigator.DBNDatabaseObject.name.name                          = 名称
meta.org.jkiss.dbeaver.model.navigator.DBNLocalFolder.name.name                             = 名称
meta.org.jkiss.dbeaver.model.navigator.DBNProjectDatabases.name.name                        = 名称
meta.org.jkiss.dbeaver.model.navigator.DBNResource.nodeDisplayName.name                            = 名称
meta.org.jkiss.dbeaver.model.navigator.DBNResource.resourceLastModified.name                = 最后修改
meta.org.jkiss.dbeaver.model.navigator.DBNResource.resourceLocation.name                    = 位置
meta.org.jkiss.dbeaver.model.navigator.DBNResource.resourcePath.name                        = 路径
meta.org.jkiss.dbeaver.model.navigator.DBNResource.resourceSize.name                        = 大小
meta.org.jkiss.dbeaver.model.navigator.DBNRoot.name.name                                    = 名称
meta.org.jkiss.dbeaver.model.navigator.fs.DBNFileSystemRoot.nodeName                        = 桶
meta.org.jkiss.dbeaver.model.navigator.fs.DBNPathBase.nodeDisplayName.name                         = 名称
meta.org.jkiss.dbeaver.model.navigator.fs.DBNPathBase.resourceLastModified.name             = 最后修改
meta.org.jkiss.dbeaver.model.navigator.fs.DBNPathBase.resourceLocation.name                 = 位置
meta.org.jkiss.dbeaver.model.navigator.fs.DBNPathBase.resourcePath.name                     = 路径
meta.org.jkiss.dbeaver.model.navigator.fs.DBNPathBase.resourceSize.name                     = 大小
meta.org.jkiss.dbeaver.model.rm.RMProject.createTime.name                                   = 创建时间
meta.org.jkiss.dbeaver.model.rm.RMProject.creator.name                                      = 创作者
meta.org.jkiss.dbeaver.model.rm.RMProject.description.name                                  = 描述
meta.org.jkiss.dbeaver.model.rm.RMProject.type.name                                         = 类型
meta.org.jkiss.dbeaver.model.struct.DBSObject.description.name                              = 描述
meta.org.jkiss.dbeaver.model.struct.DBSObject.name.description                              = 对象名称
meta.org.jkiss.dbeaver.model.struct.DBSObject.name.name                                     = 名称
meta.org.jkiss.dbeaver.model.struct.rdb.DBSProcedure.procedureType.description              = 过程类型
meta.org.jkiss.dbeaver.model.struct.rdb.DBSProcedure.procedureType.name                     = 类型
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableConstraintColumn.attribute.name             = 列名
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableConstraintColumn.ordinalPosition.name       = 顺序位置
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableIndex.unique.description                    = 唯一索引
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableIndex.unique.name                           = 唯一
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableIndexColumn.ascending.name                  = 升序
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableIndexColumn.ordinalPosition.name            = 位置
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTableIndexColumn.tableColumn.name                = 表字段
meta.org.jkiss.dbeaver.model.struct.rdb.DBSTrigger.table.name                               = 表
