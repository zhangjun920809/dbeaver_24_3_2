driver.cockroach.description = CockroachDB JDBC драйвер
driver.postgresql.description = PostgreSQL стандартный драйвер
driver.materialize.description = Materialize JDBC драйвер
driver.timescale.description = Timescale JDBC драйвер
driver.yellowbrick.description = Yellowbrick JDBC драйвер
driver.yugabytedb.description = YugabyteDB JDBC драйвер
driver.cratedb.description = CrateDB JDBC драйвер
handler.ssl.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description = Поддерживает ли метод доступа обратное сканирование
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name = Обратное сканирование
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description = Поддерживает ли метод доступа мультиколоночные индексы?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name = Мультиколонки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description = Поддерживает ли метод доступа упорядоченное сканирование по индексированным значениям колонки?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name = Упорядоченность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description = Поддерживает ли метод доступа упорядоченное сканирование по результатам оператора индексированной колонки?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name = Упоряд. по опер.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description = Поддерживает ли метод доступа уникальные индексы?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name = Уникальность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description = Может ли индекс этого типа быть кластеризован?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name = Кластеризация
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description = OID функции-обработчика, предоставляющую информацию о методе доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name = Обработчик
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description = Название метода доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description = Код строки (кортежа)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description = Число стратегий оператора для этого метода доступа или 0, если у него нет определённого набора стратегий оператора
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name = Стратегии
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description = Поддерживает ли метод доступа сканирование без ограничений для первого индексированной колонки?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name = Сканир. без огр.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description = Поддерживает ли индекс данного типа управление тонкоструктурными предикатными блокировками?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name = Предикатн. блокир.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description = Поддерживает ли метод доступа поиск по ScalarArrayOpExpr ?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name = Поиск в массиве
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description = Поддерживает ли метод доступа поиск по IS NULL/NOT NULL?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name = Поиск null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description = Может ли индекс хранимого типа данных отличаться от типа данных в колонке?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name = Особое хранение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description = Число поддерживаенмых подпрограмм для этого метода доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name = Подпрограммы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description = На данный момент это всегда i, что указывает, что это метод доступа индекса; в будущем могут появиться и другие значения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description = Комментарий агрегатной функции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description = Определение функции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name = Функция
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description = Типы входных данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name = Тип (вход)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description = Название агрегатной функции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description = Функция ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description = Тип выходных данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name = Тип (выход)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description = Имя схемы, содержащей правило сортировки столбца, либо NULL, если это правило по умолчанию или тип данных столбца несортируемый
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name = Правило сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.description = Тип данных колонки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.name = Тип данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.description = Подставляется вместо NULL при вставке и пр.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name = По умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.description = Комментарий к колонке
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description = Автоувеличение значения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name = Автоувеличение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description = Эта колонка определяется локально в отношении. Обратите внимание, что колонка может быть определена локально и унаследована одновременно.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name = Локально
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description = Если в типе данных указан тип текстовой или битовой строки, это поле задаёт её объявленную максимальную длину; NULL для всех других типов данных, либо если максимальная длина не объявлена.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name = Длина
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description = Уникальный ID объекта атрибута
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description = Если в типе данных указан числовой тип, этот столбец содержит точность (объявленную или неявную) типа для целевого столбца.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name = Точность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description = Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name = Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.name=Генерация
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.description=Генерированное значение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description = Масштаб определяет число значащих цифр справа от десятичной точки.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name = Масштаб
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.name=Поля типа интервал
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description = Краткое описание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name = Описание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description = Установленная версия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name = Установлено
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description = Имя расширения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name = Имя
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description = Версия расширения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name = Версия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.description = Название набора символов/кодировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description = LC_COLLATE для этого объекта сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name = Сортировка
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description = LC_CTYPE для этого объекта сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name = CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description = Кодировка, к которой применяется сортировка, или -1, если она работает для любой кодировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name = Кодировка
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description = Название упорядочивания / порядка следования / правила сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name = Провайдер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description = Пространство имен, которое содержит эту сортировку
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name = Выравнивание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.description = Функция анализа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name = Функция анализа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name = Разделитель массива
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name = Размерность массива
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name = Тип элемента массива
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name = Исходный тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name = По значению
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.description = Код упорядочивания / порядка следования / правила сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name = Код правила сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description = Ограничение (для типов доменов)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name = Ограничение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name = По умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.description = Element Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name = Тип элемента
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description = Список возможных значений перечисления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name = Enum значения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name = Функция ввода
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name = Входная функция Mod
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name = Выходная функция Mod
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.description = Обязательный тип не может хранить null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name = Обязательность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name = Функция вывода
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name = Предпочтительный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name = Функция получения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name = Функция отправки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name = Хранилище
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name = Категория типа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name = Тип Mod
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name = Тип типа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.description.name = Описание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.description = Разрешение доступа к базе данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name = Соединения допускаются
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name = Правило сортировки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.description = Максимальное число одновременных соединений к этой БД
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name = Квота соединений
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name = Категория типов
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.description = Пользователь, имеющий права распоряжаться в данной БД
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name = Администратор БД
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name = Кодировка по умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name = Табличное пространство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.description = Шаблон определяет обязательное содержание базы данных сразу после создания
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name = Шаблон
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name = Зависимость
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name = Таблица
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.description = фильтра WHERE для таблиц конфигурации расширения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name = Условия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description = Название модуля расширения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description = Можно переместить в другую схему
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name = Перемещаемое
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description = Установленная схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description = таблицы конфигурации расширения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name = Таблицы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description = Установленная версия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name = Версия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.description = Функция указателя
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name = Функция указателя
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.description = Название обертки внешних данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.description = Настройки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name = Настройки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.description = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.description = Функция проверки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name = Функция проверки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.description = Объект, предоставляющий доступ к табличным данным вне Postgres
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name = Обертка внешних данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.description = Название записи о сервере, предоставляющим внешние данные
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name = Настройки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.description = Тип сервера внешних данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name = Версия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.description = Manipulation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name = Действие
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.description = Источник
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name = Источник
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.description = Orientation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name = Ориентация
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name = Время срабатывания
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description = Метод доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name = Метод доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.description = Проверка минимума
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name = Проверка минимума
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.description = Кластеризованный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name = Кластеризованный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.description = Комментарий схемы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description = Если true, этот индекс поддерживает ограничение-исключение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name = Исключение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description = Если true, проверка уникальности осуществляется непосредственно при добавлении данных (неприменимо, если значение unique не true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name = Немедленный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description = Кол-во последовательных сканирований, выполненных, когда аргумент является таблицей, или кол-во сканирований индекса, выполненных, когда аргумент является индексом
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name = Кол-во сканирований
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description = Дисковое пространство, используемое индексом
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.name = Размер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description = Определение индекса
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description = Дерево выражений для предиката частичного индекса. Null, если не частичный индекс.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name = Предикат
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description = Этот индекс представляет первичный ключ таблицы (в этом случае и в поле "уникальный" должно быть значение true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name = Первичный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description = Если true, индекс готов к добавлению данных. Значение false означает, что индекс игнорируется операциями INSERT/UPDATE.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name = Готовый
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description = Индекс табличного пространства
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name = Табличное пространство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description = Уникальный индекс
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name = Уникальный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description = Если true, индекс можно применять в запросах. Значение false означает, что индекс, возможно, неполный: он будет, тем не менее, изменяться командами INSERT/UPDATE, но безопасно применять его в запросах нельзя. Если он уникальный, свойство уникальности так же не гарантируется.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name = Действительный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.description = По возрастанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name = По возрастанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.description = Значение NULL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name = Значение NULL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name = Класс оператора
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.description = Номер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name = Номер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.description = Колонка
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name = Колонка
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name = ID обработчика
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name = Встроенный ID обработчика
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name = Код владельца
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name = Доверенный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.description = User Defined
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name = Определён пользователем
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.description = Validator Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name = Код валидатора
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.description =
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.name = Значение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.description =
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.name = Ед. изм.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.description =
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description = Табличное пространство материализованного представления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name = Табличное пространство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name = Наполнено
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name = По умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name = Семейство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name = Тип ключа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.description = Агрегат
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name = Агрегат
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name = Тело
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.description = Оценка строк на выходе
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name = Оценка строк на выходе
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.description = Затраты
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name = Затраты
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.description = Язык
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name = Язык
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description = Функция не имеет побочных эффектов. Никакая информация о её аргументах не выдаётся, кроме как через возвращаемое значение. Любая функция, которая может выдать ошибку, в зависимости от значений аргументов, не является герметичной.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name = Герметичность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name = Источник
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description = Владелец функции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.description = Вызовы этой функции могут быть упрощены заданной функцией
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name = Приведения типов
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description = Свойство volatile говорит, зависит ли результат функции только от её входных аргументов, либо на него влияют внешние факторы.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name = Изменчивость
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.description = Возвращаемый тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name = Возвращаемый тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description = Функция возвращает множество (т. е. множество значений указанного типа данных)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name = Возвращает множество
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.description = Запуск с правами владельца
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name = Запуск с правами владельца
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description = Функция возвращает NULL, если любой из аргументов при вызове NULL. В этом случае функция фактически не будет вызываться вовсе. Функции, не являющиеся «строгими», должны быть готовы принять значения NULL.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name = Строгий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.description = Тип массива
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name = Тип массива
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.description = Функция является оконной
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name = Окно
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description = Параметр по умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name = По умолчанию
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name = Номер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name = Вид параметра
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name = Тип параметра
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.description = Роль не подчиняется никаким политикам защиты на уровне строк
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name = Bypass Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.description = Роль может подключаться к серверу. То есть эта роль может быть указана в качестве начального идентификатора авторизации сеанса
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name = Право входа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.description = Максимальное число одновременных соединений от роли, -1 не ограничен
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name = Квота соединений
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.description = Роль может создавать базы данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name = Право создания базы данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.description = Роль может создавать другие роли
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name = Право создания роли
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.description = Роль автоматически наследует права ролей, в которые она включена
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name = Наследование 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.description = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.description = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.description = Пароль
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name = Пароль
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.description = Роль является ролью репликации. Такие роли могут устанавливать соединения для репликации и создавать/удалять слоты репликации.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name = Право репликации
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.description = Роли имеет права суперпользователя
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name = Суперпользователь
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.description = Срок действия пароля (используется только при аутентификации по паролю); NULL, если срок действия не ограничен
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name = Действителен до
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectDefinitionText.name = Определение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.description.name=Описание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name = Административные возможности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name = Права выдал
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name = Роль
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description = Элементы управления, в которых session_replication_role режимы срабатывания правила. О = правило срабатывает в "origin" и "local" режимах, Д = правило отключено, Р = срабатывает правило в режиме "реплика", А = правило срабатывает всегда.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name = Включено
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description = Истинно, если правило является правилом INSTEAD
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name = Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description = Название правила
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name = Определение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description = Тип события, для которого предназначено правило: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name = Типы данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name = База данных
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description = Комментарий к схеме
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description = Кэш последовательности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name = Кэш
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description = Последовательность зациклена
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name = Циклирование
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description = Инкрементное значение последовательности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name = Шаг
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description = Последнее значение последовательности, записанное на диск.\nЕсли используется кэширование, это значение может быть больше,\nчем последнее значение, переданное из последовательности.\nНоль, если последовательность еще не была прочитана.\nЕсли текущий пользователь не имеет привилегии USAGEили SELECT\nдля последовательности, значение равно нулю.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name = Последнее
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description = Максимальное значение последовательности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name = Максимум
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description = Минимальное значение последовательности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name = Минимум
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name = Есть Oids
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description = Секционирование таблицы по
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name = Секционирование по
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name = Секционирование
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name = Подтаблицы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name = Надтаблицы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name = Табличное пространство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.description = Описание таблицы
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.description = ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description = Владелец (пользователь, создавший таблицу)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description = Параметры, относящиеся к методу доступа, такие как строки "keyword=value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name = Дополнительные опции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description = Предикат для проверки (CHECK)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name = Выражение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description = Является ограничение откладываемым?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name = Откладываемое
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description = Является ограничение отложенным по умолчанию?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name = Отложенное
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description = Комментарий ограничения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name = Комментарий
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description = Текст определения ограничения
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name = Колонка
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.description = Порядковая позиция
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name = Номер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name = Настройки удалённого доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name = Сервер удалённого доступа
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name = Связанная сущность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description = Правило удаления для ограничения внешнего ключа: CASCADE, SET NULL, SET DEFAULT, RESTRICT или NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name = Правило удаления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description = MATCH FULL не позволит одной колонке многоколоночного внешнего ключа быть null, если все колонки внешнего ключа не являются null.\nMATCH SIMPLE позволяет некоторым колонкам внешнего ключа быть null, в то время как другие части внешнего ключа не являются null.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name = Тип соответствия
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description = Связанное ограничение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name = Связанное ограничение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description = Правило изменения для ограничения внешнего ключа: CASCADE, SET NULL, SET DEFAULT, RESTRICT или NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name = Правило обновления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.description = Ссылка на колонку
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name = Ссылка на колонку
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description = Связанная сущность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name = Связанная сущность
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.description = Значение последовательности
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name = Значение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.description = Выражение, по которому создавалась секция
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name = Выражение для секции
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description = Общее дисковое пространство, используемое указанной таблицей
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name = Дисковое пространство
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description = Дисковое пространство, используемое fork 'main'
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name = Реальный размер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name = Число строк
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name = Примерное число строк
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name = Расположение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name = Настройки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name = Владелец
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name = Время срабатывания
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description = Имена колонок таблицы, если триггер зависит от колонки
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name = Колонка(и)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name = Описание
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description = Элементы управления, в которых session_replication_role режимы срабатывания триггера. O = триггер срабатывает в режимах "origin" и "local", D = триггер отключен, R = триггер срабатывает в режиме "replica", A = триггер срабатывает всегда.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name = Включенный
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description = Функция для вызова
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name = Функция
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name = Действие
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name = Источник
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name = ID объекта
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name = Таблица
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description = Тип триггера (ROW или STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description = Выражение, определяющее исполнение триггерной функции или отказ от её вызова
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name = Условие срабатывания
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name = Внешний сервер
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name = Настройки сервера
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name = Параметры сопоставления пользователей
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.description = Название представления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.description = Нормализованный запрос, определяющий содержание представления
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name = Определение
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name = Название
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name = Источник
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name = Внешние опции
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name = Сжатый
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name = Формат ввода
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name = Расположение
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name = Формат вывода
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name = Параметры
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name = Сериализация
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description = Кодировка столбца. Тип сжатия, который применяется к столбцу значений данных в виде строк, добавляемых в таблицу.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name = Кодировка
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description = Истинно, если этот столбец является ключом распределения для таблицы.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description = Порядок столбца в ключе сортировки.\r\nЕсли в таблице используется составной ключ сортировки, то все столбцы, являющиеся частью ключа сортировки, имеют положительное значение, указывающее положение столбца в ключе сортировки.\r\nЕсли в таблице используется чередующийся ключ сортировки, то каждый столбец, являющийся частью ключа сортировки, имеет поочередно положительное или отрицательное значение, где абсолютное значение указывает положение столбца в ключе сортировки.\r\nЕсли 0, столбец не является частью ключа сортировки.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name = Удерживать PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name = Удерживать пользователя
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name = Ждать PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name = Ожидание пользователя
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name = Схема
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description = Страница / Кортеж
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name = Стр/Кортеж
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description = Разрешено
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name = Выдан
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name = Тип
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.description = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name = Код процесса
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description = Связь
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description = Transaction ID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name = Транзакция
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name = Строки
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.description = Стоимость
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name = Стоимость
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description = Сущность
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name = Сущность
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name = Условие
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description = Тип узла
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name = Тип узла
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name = Время
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name = Приложение
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name = Время запуска
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name = Суть запроса
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name = Хост клиента
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name = Порт клиента
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name = База данных
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.description = Код процесса
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name = Код процесса
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name = Время запуска запроса
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name = Состояние
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name = Время измнения состояния
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name = Пользователь
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.description = 
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name = Время запуска Xact
provider.data.type.postgresql.description = Поставщик типов данных PostgreSQL
provider.data.type.postgresql.name = Поставщик типов данных PostgreSQL
tree.accessMethod.node.name = Метод доступа
tree.accessMethods.node.name = Методы доступа
tree.accessMethods.node.tip = Методы доступа
tree.administer.node.name = Администрирование
tree.administer.node.tip = Администрирование
tree.aggregate.node.name = Агрегатная функция
tree.aggregates.node.name = Агрегатные функции
tree.aggregates.node.tip = Агрегатные функции
tree.attribute.node.name = Свойство
tree.attributes.node.name = Свойства
tree.avalextension.node.name = Доступные расширения
tree.avalextensions.node.name = Доступные расширения
tree.collation.node.name = Правило сортировки
tree.collations.node.name = Правила сортировки
tree.column.node.name = Колонка
tree.columns.node.name = Колонки
tree.columns.node.tip = Колонки таблицы
tree.constraint.columns.node.name = Колонки ограничения
tree.constraint.node.name = Ограничение
tree.constraints.node.name = Ограничения
tree.constraints.node.tip = Уникальные ключи таблицы
tree.database.node.name = База данных
tree.databases.node.name = Базы данных
tree.dependencies.node.name = Зависимости
tree.dependencies.node.tip = Табличные зависимости
tree.dependency.node.name = Зависимость
tree.encoding.node.name = Кодировка
tree.encodings.node.name = Кодировки
tree.extension.node.name = Расширение
tree.extensions.node.name = Расширения
tree.extensions.node.tip = Список имен расширений
tree.foreignDataWrapper.node.name = Оболочка внешних данных
tree.foreignDataWrappers.node.name = Оболочки внешних данных
tree.foreignServer.node.name = Сервер удалённого доступа
tree.foreignServers.node.name = Серверы удалённого доступа
tree.foreign_key.node.name = Внешний ключ
tree.foreign_key.node.tip = Внешние ключи таблицы
tree.foreign_key_columns.node.name = Колонки внешнего ключа
tree.foreign_keys.node.name = Внешние ключи
tree.index.node.name = Индекс
tree.index_columns.node.name = Колонки индекса
tree.indexes.node.name = Индексы
tree.indexes.node.tip = Индексы
tree.information.node.name = Системные объекты
tree.information.node.tip = Информация
tree.language.node.name = Язык
tree.languages.node.name = Языки
tree.setting.node.name = Настройка
tree.settings.node.name = Настройки
tree.locks.node.name = Блокировки
tree.locks.node.tip = Диспетчер блокировок сервера
tree.mview.node.name = Мат. представление
tree.mviews.node.name = Мат. представления
tree.mviews.node.tip = Мат. представления
tree.opClass.node.name = Класс оператора
tree.opClasses.node.name = Классы операторов
tree.opClasses.node.tip = Классы операторов
tree.opFamilies.node.name = Семейства операторов
tree.opFamilies.node.tip = Семейства операторов
tree.opFamily.node.name = Семейство оператора
tree.package.node.name = Пакет
tree.packages.node.name = Пакеты
tree.partition.node.name = Секция таблицы
tree.partition_columns.node.name = Колонки
tree.partitions.node.name = Секции таблиц
tree.partitions.node.tip = Секции таблиц
tree.procedure.node.name = Процедура
tree.procedure_columns.node.name = Параметры процедуры
tree.procedures.node.name = Функции
tree.procedures.node.tip = Функции и процедуры
tree.reference.node.name = Ссылка
tree.reference_columns.node.name = Связанные Колонки
tree.references.node.name = Ссылки
tree.references.node.tip = Ссылки таблицы
tree.role.belong.node.name = Роль
tree.role.belongs.node.name = Роли
tree.role.belongs.node.tip = Роли
tree.role.member.node.name = Роль
tree.role.members.node.name = Участники
tree.role.members.node.tip = Участники
tree.role.node.name = Роль
tree.roles.node.name = Роли
tree.roles.node.tip = Роли и пользователи
tree.rule.node.name = Правило
tree.rules.node.name = Правила
tree.rules.node.tip = Правила таблицы
tree.rules_columns.node.name = Колонки
tree.schema.node.name = Схема
tree.schemas.node.name = Схемы
tree.schemas.node.tip = Схемы
tree.sequence.node.name = Последовательность
tree.sequences.node.name = Последовательности
tree.sequences.node.tip = Последовательности
tree.sessions.node.name = Сессии
tree.storage.node.name = Хранилище
tree.storage.node.tip = Управление хранением
tree.table.node.name = Таблица
tree.tablechildren.node.name = Дочерние таблицы
tree.tablechildren_columns.node.name = Столбцы дочерних таблиц
tree.tables.node.name = Таблицы
tree.tables.node.tip = Таблицы
tree.tablespace.node.name = Табличное пространство
tree.tablespaces.node.name = Табличные пространства
tree.trigger.node.name = Триггер
tree.triggers.node.name = Триггеры
tree.triggers.node.tip = Тригеры таблицы
tree.event.trigger.node.name = Событийный триггер
tree.event.triggers.node.name = Событийные триггеры
tree.event.triggers.node.tip = Событийные триггеры
tree.tview.node.name = Представление
tree.tviews.node.name = Представления
tree.tviews.node.tip = Представления
tree.type.node.name = Тип данных
tree.types.node.name = Типы данных
tree.types.node.tip = Типы данных
tree.userMapping.node.name = Сопоставление пользователей
tree.userMappings.node.name = Сопоставление пользователей
tree.foreign.tables.node.name=Внешние таблицы
tree.foreign.table.node.name=Внешняя таблица

# tool analyze #
tasks.analyze.database.node.name=Собрать статистику по БД
tasks.analyze.table.node.name=Собрать статистику по таблице
tasks.analyze.table.node.description=Собрать статистику по таблице(цам)

# tool refresh mat view #
tasks.mview.refresh.node.name = Обновить материализованное представление
tasks.mview.refresh.node.description = Обновить материализованное представление(ния)
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.name = С данными
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.description = Запрос выполняется и используется для заполнения представления\n во время выполнения команды (если не используется WITH NO DATA)

# tool truncate
tasks.truncate.node.name = Очистить таблицу
tasks.truncate.node.description = Очистить таблицу(цы)
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.name = Run in separate transaction
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.description = Run tool in separate transaction. Commit active transaction before tool execution and commit after successful tool execution
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.name = Restart identity
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.description = Automatically restart sequences owned by columns of the truncated table(s).
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.name = Cascade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.description = Automatically truncate all tables that have foreign key references to any\n of the named tables, or to any tables added to the group due to CASCADE.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.name = Only
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.description = If ONLY is not specified, the table and all its descendant tables (if any) are truncated.

# tool vacuum #
tasks.vacuum.table.node.name = Сборка мусора таблицы
tasks.vacuum.table.node.description = Сборка мусора таблиц(ы)
tasks.vacuum.database.node.name = Сборка мусора БД
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.name = Full
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.description = Выбирает «полный» вакуум, который может освободить больше места\r\nно занимает гораздо больше времени и эксклюзивно блокирует таблицу.\r\nЭтот метод также требует дополнительного дискового пространства, так как он записывает новую копию таблицы\r\nи не освобождает старую копию до операции завершения.\r\nИспользовать только в том случае, если из таблицы необходимо извлечь значительный объем.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.name = Freeze
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.description = Выбирает агрессивное «замораживание» кортежей. Указание FREEZE эквивалентно выполнению \r\nVACUUM с параметрами vacuum_freeze_min_age и vacuum_freeze_table_age, установленными на ноль.\r\nАгрессивное замораживание всегда выполняется, когда таблица перезаписывается,\r\nпоэтому этот параметр является избыточным, если задано значение FULL
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.name = Analyzed
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.description = Обновляет статистику, используемую для создания лучшей схемы выполнения запроса.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.name = Disable page skipping
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.description = Обычно VACUUM пропускает страницы на основе карты видимости. \r\nСтраницы, где известно, что все кортежи заморожены, всегда могут быть пропущены,\r\nа те, где все кортежи известны как видимые для всех транзакций, могут быть пропущены, кроме случаев, когда выполняется агрессивный вакуум.\r\nЗа исключением случаев выполнения агрессивного вакуума, некоторые страницы могут быть\r\nпропущены во избежание ожидания завершения их использования другими сеансами.\r\nЭтот параметр отключает все действия по пропуску страниц\n Работает, начиная с PostgreSQL 9.6
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.description = Указывает, что команда VACUUM должна попытаться удалить элементы индекса, указывающие на «мёртвые» кортежи.\n Обычно это желательная операция и она выполняется по умолчанию, если только для таблицы, подлежащей очистке, не задан параметр vacuum_index_cleanup.\n Отключать эту операцию может иметь смысл, когда нужно выполнить очистку как можно быстрее,\n например для предотвращения надвигающейся угрозы зацикливания идентификаторов транзакций.\n Однако если очистка индекса не производится регулярно,\n производительность может ухудшаться, так как по мере внесения изменений в таблицу индексы будут накапливать «мёртвые» кортежи,\n а сама таблица будет накапливать «мёртвые» указатели, которые могут быть удалены только после очистки индекса.\n Это указание не действует для таблиц, в которых нет индексов, и игнорируется в случае использования указания FULL.\n Работает, начиная с PostgreSQL 12
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.description = Указывает, что команда VACUUM должна попытаться обрезать пустые страницы в конце таблицы,\n чтобы освободившееся место было возвращено операционной системе. Обычно это желательная операция и она выполняется по умолчанию,\n если только для таблицы, подлежащей очистке, не сброшен параметр vacuum_truncate.\n Отключать эту операцию может иметь смысл, чтобы избежать блокировки ACCESS EXCLUSIVE для таблицы, подлежащей очистке.\n Это указание игнорируется в случае использования указания FULL.\n Работает, начиная с PostgreSQL 12
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.description = Указывает, что команда VACUUM не должна ждать освобождения никаких конфликтующих блокировок, начиная обработку отношения:\n если отношение не удаётся заблокировать сразу, без ожидания, оно пропускается.\n Заметьте, что даже с этим указанием VACUUM может заблокироваться, открывая индексы отношения.\n Кроме того, VACUUM ANALYZE может заблокироваться и при получении выборки строк из секций, потомков в иерархии наследования или некоторых видов сторонних таблиц.\n Учтите также, что при наличии конфликтующей блокировки в секционированной таблице команда VACUUM\n с этим указанием пропускает все её секции, тогда как обычно все они обрабатываются.\n Работает, начиная с PostgreSQL 12

meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolWithStatus$ToolStatus.message.name = Сообщение
