# data source provider #

datasource.postgresql.description = Conector JDBC PostgreSQL

driver.cockroach.description   = Driver JDBC CockroachDB
driver.cratedb.description     = Driver JDBC CrateDB
driver.edb.description         = Driver padrão EDB
driver.gcloudpg.description    = Driver JDBC PostgreSQL Google Cloud SQL
driver.materialize.description = Driver JDBC Materialize
driver.postgresql.description  = Driver padrão PostgreSQL
driver.risingwave.description  = Driver JDBC RisingWave
driver.timescale.description   = Driver JDBC Timescale
driver.yugabytedb.description  = Driver JDBC YugabyteDB

handler.ssl.description = Secure socket layer
# network handler #
handler.ssl.name        = SSL

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description                   = O método de acesso suporta escaneamento reverso?
# meta #
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name                          = Pode escanear para trás
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description                   = O método de acesso suporta índices multi-coluna?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name                          = Permitir multi-col
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description                      = O método de acesso suporta escaneamentos ordenados classificados pelo valor de colunas indexadas?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name                             = Pode ordenar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description                  = O método de acesso suporta escaneamentos ordenados classificados pelo resultado de um operador na coluna indexada?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name                         = Pode ordenar por op
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description                     = O método de acesso suporta índices unique?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name                            = Pode unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description                   = Um índice desse tipo pode ser agrupado em cluster?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name                          = Clusterable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description                       = OID de uma função de manipulador responsável por fornecer informações sobre o método de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name                              = Manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description                          = Nome do método de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name                                 = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description                      = Identificador de linha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name                             = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description            = Número de estratégias do operador para este método de acesso, ou zero se o método de acesso não tiver um conjunto fixo de estratégias do operador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name                   = Estratégias
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description                   = O método de acesso suporta um escaneamento sem nenhuma constraint para a primeira coluna do índice?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name                          = Chave opcional
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description                     = Um índice desse tipo gerencia bloqueios de predicado refinados?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name                            = Travas de predicado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description                   = O método de acesso suporta pesquisas ScalarArrayOpExpr?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name                          = Pesquisa de matriz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description                   = O método de acesso suporta pesquisas IS NULL/NOT NULL?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name                          = Pesquisa de nulos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description                       = O tipo de dados de armazenamento de índice se distingue do tipo de dados de coluna?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name                              = Armazenamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description               = Número de rotinas de suporte para este método de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name                      = Rotinas de suporte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description                          = Atualmente sempre i para indicar um método de acesso ao índice; outros valores podem ser permitidos no futuro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name                                 = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description                      = Comentário de função agregada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name                             = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description                         = Definição de function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name                                = Function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description                       = Tipos de dados de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name                              = Entradas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description                             = Nome de função agregada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description                         = ID do objeto de function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description                       = Tipo de dados de saída
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name                              = Tipo de saída
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description                        = O collation definido da coluna, ou zero se a coluna não for de um tipo de dados afetado por collation.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name                               = Collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.description                     = Valor padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name                            = Padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.description                      = Comentário na coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name                             = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.description                     = Tipo de dados da coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.name                            = Tipo de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.description                   = Valor gerado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.name                          = Gerado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description                         = Identidade de atributo (sempre ou por padrão)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name                                = Identidade
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.description                = Campos do tipo intervalo. Se ambos os campos e escala forem especificados,\r\n os campos precisam incluir SEGUNDOS, visto que a escala se aplica apenas aos segundos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.name                       = Tipo de intervalo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description                            = Esta coluna é definida localmente na relação. Perceba que uma coluna pode ser definida localmente e herdada simultaneamente.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name                                   = Local
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description                        = Se o tipo de dados especificar o tipo de uma sequência de texto ou bit, esse campo especificará seu comprimento máximo declarado; NULL para todos os outros tipos de dados ou se o comprimento máximo não for declarado.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name                               = Comprimento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description                         = Atributo de ID de objeto unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description                        = Se o tipo de dados contiver um tipo numérico, esta coluna conterá a precisão (declarada ou implícita) do tipo para a coluna de destino.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name                               = Precisão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description                         = Não nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name                                = Não nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description                            = A escala determina o número de dígitos significativos à direita do ponto decimal.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name                                   = Escala
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description             = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name                    = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description        = Versão instalada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name               = Instalado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description                    = Nome da extensão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description                 = Versão de extensão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name                        = Versão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description                          = LC_COLLATE para este objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name                                 = Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description                            = LC_CTYPE para este objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name                                   = CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description                       = Codificação na qual o collation é aplicável, ou -1 se funcionar para qualquer codificação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name                              = Codificação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description                             = Nome do collation (um único por namespace e codificação)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name                                 = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name                                = Provedor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description                           = O namespace que contém este collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name                                  = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name                                    = Alinhamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name                              = Analisar function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name                           = Delimitador de matriz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name                                 = Dimensão de matriz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name                            = Tipo de item da matriz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name                                 = Tipo base
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name                                  = Por valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name                              = ID do collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description                        = Constraint (para tipos de dominio)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name                               = Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name                             = Valor padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.description.name                              = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name                              = Tipo de elemento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description                        = Lista de possíveis valores de enumeração
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name                               = Valor de enum
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name                                = Função de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name                                = Modo de função entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name                               = Modo de função saída
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name                                  = Não nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.objectId.name                                 = ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name                               = Função de saída
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name                                    = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name                                = Preferido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name                              = Função de recebimento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name                                 = Função de envio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name                                  = Armazenamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name                             = Tipo de categoria
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name                                  = Tipo de modo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name                                 = Tipo Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name                             = Permitir conexão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name                                  = Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name                          = Limite de conexão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name                                    = Ctype
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name                                      = DBA
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name                          = Codificação padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name                        = Tablespace padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description                       = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name                              = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name                                 = Modelo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name                                   = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name                               = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name                             = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name                             = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name                              = Tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.targetObject.name                           = Objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.description                  = Controla em qual dos modos session_replication_role o evento é acionado.\r\nO = é acionado nos modos "origin" e "local", D = desabilitado, R = é acionado no modo "replica", A = é acionado sempre.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.name                         = Estado habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.eventType.name                            = Tipo de evento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.function.name                             = Function/Procedure
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.objectId.name                             = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.description                       = Condições de extensões
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name                              = Condições
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description                             = Nome da extensão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description                      = Pode ser realocado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name                             = Relocável
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description                           = Esquema instalado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name                                  = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description                           = Usando tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name                                  = Tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description                          = Versão instalada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name                                 = Versão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name                        = Manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name                        = Opções
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name                          = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name                      = Validador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name                  = Empacotamento de dados estrangeiros
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name                                = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name                             = Opções
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name                               = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name                                = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name                             = Versão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name                       = Manipulação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name               = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name                        = Orientação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name                             = Temporização
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description                         = Método de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name                                = Método de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name                                   = Checar X Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name                                   = Agrupado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name                                 = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description                            = Se verdadeiro, este índice suporta uma exclusão de constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name                                   = Exclusão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description                            = Se verdadeiro, a verificação de unicidade é realizada diretamente ao adicionar dados (não aplicável se unique não for verdadeiro)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name                                   = Imediato
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description                        = Número de varreduras sequenciais feitas quando o argumento é uma tabela ou número de varreduras de índice feitas quando o argumento é um índice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name                               = Num Scans
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description                         = Espaço em disco usado pelo índice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.name                                = Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description                 = Definição de índice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.name                        = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description                  = Árvore de expressão para predicado de índice parcial. Nulo se não for um índice parcial.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name                         = Predicado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description                              = Este índice representa a chave primária da tabela (neste caso, o campo exclusivo também deve ser verdadeiro)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name                                     = Primário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description                                = Se verdadeiro, o índice está pronto para adicionar dados. Um valor falso indica que o índice é ignorado por INSERTs/UPDATEs.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name                                       = Pronto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description                           = Tablespace do índice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name                                  = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description                               = Índice unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name                                      = Unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description                                = Se verdadeiro, o índice pode ser usado em consultas. False significa que o índice está possivelmente incompleto: no entanto, será alterado pelos comandos INSERT/UPDATE, mas é seguro usá-lo em consultas quando possível. Se for unique, a propriedade de unicidade também não é garantida.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name                                       = Válido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name                             = Ascendente
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name                              = Nullable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name                         = Classe de operador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name                       = Posição ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.description                    = Coluna de tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name                           = Coluna de tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.description.name                                   = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.enabled.name                                       = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.hostAgent.name                                     = Agente de host
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.jobClass.name                                      = Classe
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.name.name                                          = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobClass.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.description.name                           = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.enabled.name                               = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.end.name                                   = Fim
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.start.name                                 = Início
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.description.name                               = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.enabled.name                                   = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.kind.name                                      = Natureza
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.objectDefinitionText.name                      = Código
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.onError.name                                   = Em caso de erro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.remoteConnectionString.name                    = Conexão remota
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.targetDatabase.name                            = Banco de dados de destino
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name                                = ID de manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name                          = ID do manipulador embutido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name                                 = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name                                  = ID do proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name                                  = Confiável
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name                              = Confiável
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name                              = ID do validador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description                = Tablespace da view materializada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name                       = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.description                  = Com dados [NO]
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name                         = Populado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name                             = Padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name                              = Família
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name                             = Tipo de chave
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name                           = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name                            = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name                               = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name                                = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name                          = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name                           = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name                              = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name                               = Agregado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name                                    = Corpo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name                                 = Linhas Est
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name                                = Custo Exec
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name                                    = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name                                = Linguagem
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description                        = A função não tem efeitos colaterais. Nenhuma informação sobre seus argumentos é fornecida, exceto através do valor de retorno. Qualquer função que possa produzir um erro, dependendo dos valores do argumento, não é à prova de vazamentos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name                               = À prova de vazamentos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name                    = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description                            = O proprietário da função
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name                                   = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name                           = Transformação Proc
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description                     = A propriedade volátil informa se o resultado de uma function depende apenas de seus argumentos de entrada ou se é influenciado por fatores externos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name                            = Volatilidade Proc
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name                              = Tipo de retorno
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description                       = A function retorna um conjunto (ou seja, um conjunto de valores do tipo de dados especificado)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name                              = Retorna conjuntos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name                         = Definidor de segurança
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description                           = A function retornará NULL se algum dos argumentos for NULL. Neste caso, a function não será realmente chamada. Functions que não são "estritas" devem ser preparadas para aceitar valores NULL.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name                                  = Rigoroso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name                            = Tipo Var Array
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name                                  = Janela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description            = Valor padrão do parâmetro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name                   = Padrão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name                = Posição ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name                  = Natureza da função
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name                  = Tipo de parâmetro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name                                    = Ignorar Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name                                     = Permite login
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name                                    = Limite de conexão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name                               = Criar banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name                                   = Criar role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.description.name                                  = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name                                      = Herdar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectDefinitionText.name                         = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name                                     = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name                                     = Senha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name                                  = Replicação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name                                    = Super usuário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name                                   = Valido até
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name                            = Opções de admin
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name                                = Concendente
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name                                 = Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name                                  = Propriétário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description                               = Controla em qual dos modos session_replication_role a regra é acionada. O = é acionada nos modos "origin" e "local", D = desabilitada, R = é acionada no modo "replica", A = é sempre acionada.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name                                      = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description                               = Verdadeiro se a regra for uma regra INSTEAD
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name                                      = Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description                                  = Nome da regra
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name                         = Definição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name                                     = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description                                  = Tipo de evento para o qual a regra é: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name                                         = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name                                  = Tipos de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name                                   = Banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description                         = Comentário do esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name                                = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name                                       = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.name                                   = ID do namespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name                                      = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description         = Cache da sequência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name                = Cache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description             = Se a sequência é cíclica
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name                    = Cíclica
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description        = Valor de incremento da sequência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name               = Incrementado por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description          = O último valor da sequência gravado no disco.\r\nSe o cache for usado, esse valor poderá ser maior que o último valor distribuído da sequência. \r\nNulo se a sequência ainda não tiver sido lida.\r\nTambém, se o usuário atual não tenha o privilégio USAGE ou SELECT na sequência, o valor é nulo.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name                 = Último valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description           = Valor máximo da sequência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name                  = Valor Max
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description           = Valor mínimo da sequência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name                  = Valor Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.description         = Valor inicial da sequência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.name                = Valor inicial
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.name                                      = Unidade
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.name                                     = Valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name                                     = Tem Oids
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasRowLevelSecurity.name                         = Possui segurança a nível de linha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description                         = Tabela de partição por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name                                = Partição por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name                                  = Partições
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name                                   = Sub-tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name                                 = Super tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name                                  = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name                             = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description                            = Proprietário da tabela (criador)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name                                   = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description                       = Opções específicas do método de acesso, como strings "palavra-chave = valor"
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name                              = Opções extras
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description                     = Expressão de constraints CHECK
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name                            = Expressão
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description             = A constraint é adiável?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name                    = Adiável
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description               = A constraint é adiada por padrão?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name                      = Diferido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description            = Comentário de constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name                   = Comentário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description   = Texto de definição de constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.name          = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name                      = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name                   = Atributo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name             = Posição ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name                       = Opções externas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name                        = Servidor externo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name                  = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description                 = Regra de exclusão para constraint de chave estrangeira: CASCADE, SET NULL, SET DEFAULT, RESTRICT ou NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name                        = Excluir regra
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description                  = MATCH FULL não permitirá que uma coluna de uma chave estrangeira de várias colunas seja nula, a menos que todas as colunas de chave estrangeira sejam nulas.\r\nMATCH SIMPLE permite que algumas colunas de chave estrangeira sejam nulas, enquanto outras partes da chave estrangeira não são nulas.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name                         = Tipo de correspondência
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description       = Constraint referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name              = Constraint referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description                 = A regra de alteração para uma constraint de chave estrangeira é CASCADE, SET NULL, SET DEFAULT, RESTRICT ou NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name                        = Regra de update
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name            = Coluna referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description          = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name                 = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name                      = Sequência Num
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name                = Expressão de partição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.check.name                                 = Com verificação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.event.name                                 = Evento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.role.name                                  = Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.type.name                                  = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.using.name                                 = Usando
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description                        = Espaço total em disco usado pela tabela especificada, incluindo todos os índices e dados TOAST
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name                               = Espaço em disco
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description                     = Espaço em disco usado pela bifurcação 'main'
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name                            = Tamanho Rel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name                                = Número de linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name                        = Estimativa de número de linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.description                             = Nome da localização
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name                                    = Localização
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name                                   = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name                                = Opções
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name                                  = Proprietário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name                              = Temporização
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description                         = Nomes das colunas da tabela, se o acionador for específico da coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name                                = Coluna(s)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name                               = Descrição
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description                       = Controla em qual dos modos session_replication_role o evento é acionado. O = é acionado nos modos "origin" e "local", D = desabilitado, R = é acionado no modo "replica", A = é acionado sempre.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name                              = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description                           = A function a ser chamada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name                                  = Function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name                         = Manipulação
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name                      = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name                                  = ID do Objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name                                     = Tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description                               = Tipo de trigger (ROW ou STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name                                      = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description                     = Expressão para a condição WHEN do trigger
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name                            = Expressão when
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTriggerBase.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name                         = Servidor externo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name                         = Opções do servidor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name                    = Opções de mapeamento de usuário
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name                         = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name                     = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name    = Opções externas
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name          = Comprimido
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name         = Formato de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name            = Localização
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name        = Formato de saida
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name          = Parâmetros
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serdeParameters.name     = Parâmetros Serde
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name    = Serialização
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description = Codificação da coluna. O tipo de compactação aplicada a uma coluna de valores de dados à medida que as linhas são adicionadas a uma tabela.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name        = Codificação
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description        = Verdadeiro se esta coluna for a chave de distribuição da tabela.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.name               = Chave Dist
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.fullTypeName.name          = Tipo de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description        = Ordem da coluna na chave de ordenação.\nSe a tabela usar uma chave de ordenação composta, todas as colunas que fazem parte da chave de ordenação terão um valor positivo que indica a posição da coluna na chave de ordenação.\nSe a tabela usar uma chave de ordenação intercalada, todas as colunas que fazem parte da chave de ordenação têm um valor alternadamente positivo ou negativo, em que o valor absoluto indica a posição da coluna na chave de ordenação. \nSe 0, a coluna não faz parte de uma chave de ordenação.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.name               = Chave de ordenação
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name                                = PID do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name                               = Usuário do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.name                            = Instrução do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name                                = PID do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.name                          = Instrução do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name                               = Usuário do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name                             = Esquema
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description                       = Página / Tupla
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name                              = Pág/Tpl
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description                      = Concedida
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name                             = +
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name                            = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.name                                = Modo
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name                                 = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description                     = Relação
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.name                            = Rel.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description                          = ID de transação
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name                                 = TID
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name                      = Linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name                            = Custo
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description                   = Entidade
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name                          = Entidade
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name                   = Condição
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description                 = Tipo de nó
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name                        = Tipo de nó
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name                       = Tempo
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name                           = Nome do aplicativo
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name                      = Início de back-end
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name                        = Consulta resumida
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name                        = Host cliente
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name                        = Porta do cliente
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name                                = Banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.description                        = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name                               = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name                        = Início de consulta
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name                             = Estado
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name                       = Mudança de estado
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name                              = Usuário
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name                         = Iniciar Xact
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.description            = Atualiza estatísticas usadas pelo planejador para determinar o modo mais eficiente de executar uma consulta.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.name                   = Analisado
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.description     = Normalmente o VACUUM ignora páginas baseadas no mapeamento de visibilidade.\r\nPáginas nas quais sabe-se que todos os tuples estão em freeze podem ser ignoradas, e aquelas em que sabe-se que todos os tuples são visíveis para todas as transações podem ser ignoradas, exceto ao realizar um vacuum agressivo.\r\nAlém disso, exceto quando realizar um vacuum agressivo, algumas páginas podem ser ignoradas com o intuito de evitar esperar que outras sessões terminem de utilizá-las.\r\nEsta opção desativa todo o comportamento de omissão de páginas e deve ser usado apenas quando achar que o conteúdo do mapeamento de visibilidade está suspeito, o que deve ocorrer apenas se houver uma falha de hardware ou software causando corrupção do banco de dados.\r\nCompatível desde o PostgreSQL 9.6.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.name            = Desativar omissão de página
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.description              = Opta "freezing" agressivo de tuples. Especificar FREEZE é equivalente a efetuar VACUUM com os parâmetros vacuum_freeze_min_age e vacuum_freeze_table_age definidos com zero.\r\nFreezing agressivo é efetuado sempre quando a tabela é reescrita, então esta opção é redundante quando FULL é especificado.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.name                     = Freeze
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.description                = Opta pelo vacuum "full", o que pode reivindicar mais espaço, mas leva muito mais tempo e trava tabelas exclusivamente.\r\nEste método também requer espaço em disco adicional, já que escreve uma nova cópia da tabela e não libera a cópia antiga até que a operação tenha terminado.\r\nIsto só deve ser usado quando uma quantidade significativa de espaço precisa ser reivindicada da tabela.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.name                       = Full
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.description       = Especifica que o VACUUM deve tentar remover entradas de índice que apontam para tuples prescritos.\r\n Normalmente este é o comportamento desejado e será o padrão, a menos que a opção vacuum_index_cleanup\r\n seja definida como falsa para a tabela processada pelo vacuum. Definindo esta opção como falso\r\n pode ser útil quando for necessário executar o vacuum o mais rápido possível, por exemplo, para\r\n evitar wraparound em ID de transação iminentes.\r\n Porém, se a limpeza de índice não for efetuada regularmente, a performance pode ser afetada, pois\r\n enquanto a tabela é modificada os índices irão acumular tuples prescritos e a tabela irá acumular\r\n ponteiros para linhas mortas que não podem ser removidos até que a limpeza de índice tenha terminado.\r\n Esta opção não terá efeito para tabelas que não tenham um índice e é ignorada se a opção FULL\r\n for utilizada.\r\nCompatível desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.name              = Limpeza de índices
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.description          = Especifica que o VACUUM não deve aguardar que quaisquer locks conflitantes sejam liberados ao começar\r\na processar uma relação:\r\n se uma relação não puder ser travada imediatamente sem que seja necessário esperar, a relação é ignorada.\r\n Perceba que mesmo com esta opção, o VACUUM ainda pode bloquear ao abrir os índices de relações.\r\n Além disso, o VACUUM ANALYZE ainda pode bloquear ao adquirir amostras de linhas de partições, filhos\r\n de heranças de tabelas e alguns tipos de tabelas estrangeiras.\r\n Também, ainda que o VACUUM habitualmente processe todas as partições de todas as tabelas particionadas,\r\n esta opção fará com que o VACUUM ignore todas as partições se houver uma trava conflitante na tabela\r\n particionada.\r\nCompatível desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.name                 = Ignorar travados
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.description           = Especifica que o VACUUM deve tentar truncar qualquer página vazia no final da tabela e permitir\r\n que espaço em disco para páginas truncadas sejam devolvidas ao sistema operacional.\r\n Isto normalmente é o comportamento esperado e é o padrão, a menos que a opção vacuum_truncate\r\n seja definida como falso para a tabela processada pelo vacuum. Definindo esta opção como falso\r\n pode ser útil para evitar travas ACCESS EXCLUSIVE na tabela que for necessário truncar.\r\n Esta opção é ignorada se a opção FULL for utilizada.\r\nCompatível desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.name                  = Truncate
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.description          = Se WITH DATA for especificado (ou por padrão) a consulta de apoio é executada para fornecer novos dados e a view materializada é deixada em um estado escaneável.\r\nSe WITH NO DATA for especificado, nenhum dado novo é gerado e a view materializada é deixada em um estado não-escaneável.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.name                 = With data
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.description        = Truncar automaticamente todas as tabelas que possuam referências de chaves\r\n estrangeiras para quaisquer tabelas nomeadas, ou para qualquer tabela adicionada\r\n ao grupo devido a CASCADE.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.name               = Cascade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.description             = Se ONLY não for especificado, a tabela e todas suas tabelas descendentes (se exisitirem) serão truncadas.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.name                    = Only
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.description       = Reinicia automaticamente sequências pertencentes a colunas da tabela(s) truncada(s).
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.name              = Reiniciar identidade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.description          = Executar feramenta em uma transação separada. Executar commit na transação ativa antes da execução da ferramenta e commit após execução bem-sucedida da ferramenta
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.name                 = Executar em transação separada
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolWithStatus$ToolStatus.message.name                 = Mensagem

org.jkiss.dbeaver.task.category.postgreTool.description = Ferramentas de banco de dados do PostgreSQL
org.jkiss.dbeaver.task.category.postgreTool.name        = Ferramentas
org.jkiss.dbeaver.task.category.postgresql.description  = Tarefas de banco de dados do PostgreSQL

pgDatabaseRestore.confirmationMessage = Você está prestes a restaurar o banco de dados {0} de {1}.

provider.data.type.postgresql.description = Provedor de tipos de dados do PostgreSQL
# data type provider #
provider.data.type.postgresql.name        = Provedor de tipos de dados do PostgreSQL

task.pgDatabaseBackup.description    = Tarefa de dump de banco de dados do PostgreSQL
task.pgDatabaseBackup.name           = Dump do PostgreSQL
task.pgDatabaseBackupAll.description = Tarefa de dump global do PostgreSQL
task.pgDatabaseBackupAll.name        = Dump global do PostgreSQL
task.pgDatabaseRestore.description   = Tarefa de restauração de banco de dados do PostgreSQL
task.pgDatabaseRestore.name          = Restauração do PostgreSQL
task.pgScriptExecute.description     = Execução de scripts do PostgreSQL
task.pgScriptExecute.name            = Scripts do PostgreSQL
task.pgToolTriggerDisable.name       = Desativar trigger
task.pgToolTriggerEnable.name        = Habilitar trigger

tasks.analyze.database.node.name     = Analisar banco de dados
tasks.analyze.table.node.description = Analisar tabela(s)
tasks.analyze.table.node.name        = Analisar tabela
tasks.mview.refresh.node.description = Atualizar view(s) materializada(s)
tasks.mview.refresh.node.name        = Atualizar view materializada
tasks.truncate.node.description      = Truncar tabela(s)
tasks.truncate.node.name             = Truncar tabela
tasks.vacuum.database.node.name      = Vacuum de banco de dados
tasks.vacuum.table.node.description  = Vacuum de tabela(s)
tasks.vacuum.table.node.name         = Vacuum de tabela

tree.accessMethod.node.name          = Método de acesso
tree.accessMethods.node.name         = Métodos de acesso
tree.administer.node.name            = Administrar
tree.administer.node.tip             = Administrar
tree.aggregate.node.name             = Agregar function
tree.aggregates.node.name            = Functions agregadas
tree.aggregates.node.tip             = Functions agregadas
tree.attribute.node.name             = Atributo
tree.attributes.node.name            = Atributos
tree.avalextension.node.name         = Extensão disponível
tree.avalextensions.node.name        = Extensões disponíveis
tree.collation.node.name             = Collation
tree.collations.node.name            = Collations
tree.column.node.name                = Coluna
tree.columns.node.name               = Colunas
tree.columns.node.tip                = Colunas de tabela
tree.constraint.columns.node.name    = Colunas de constraint
tree.constraint.node.name            = Constraint
tree.constraints.node.name           = Constraint
tree.constraints.node.tip            = Chaves unique de tabela
tree.database.node.name              = Banco de dados
tree.databases.node.name             = Bancos de dados
tree.databases.node.tip              = Bancos de dados clusterizados
tree.dependencies.node.name          = Dependências
tree.dependencies.node.tip           = Dependências da tabela
tree.dependency.node.name            = Dependência
tree.encoding.node.name              = Codificação
tree.encodings.node.name             = Codificações
tree.event.trigger.node.name         = Trigger de evento
tree.event.triggers.node.name        = Triggers de evento
tree.event.triggers.node.tip         = Triggers de evento
tree.extension.node.name             = Extensão
tree.extensions.node.name            = Extensões
tree.extensions.node.tip             = Extensões de banco de dados
tree.foreign.table.node.name         = Tabela estrangeira
tree.foreign.tables.node.name        = Tabelas estrangeiras
tree.foreign.tables.node.tip         = Tabelas estrangeiras
tree.foreignDataWrapper.node.name    = Empacotador de dados estrangeiros
tree.foreignDataWrappers.node.name   = Empacotadores de dados estrangeiros
tree.foreignServer.node.name         = Servidor externo
tree.foreignServers.node.name        = Servidores externos
tree.foreign_key.node.name           = Chave estrangeira
tree.foreign_key.node.tip            = Chaves estrangeiras da tabela
tree.foreign_key_columns.node.name   = Colunas de chave estrangeira
tree.foreign_keys.node.name          = Chaves estrangeiras
tree.index.node.name                 = Índice
tree.index_columns.node.name         = Colunas de índice
tree.indexes.node.name               = Índices
tree.indexes.node.tip                = Índices
tree.information.node.name           = Informações do sistema
tree.information.node.tip            = Informação
tree.job.class.node.name             = Classe
tree.job.classes.node.name           = Classes
tree.job.node.name                   = Tarefa
tree.job.schedule.node.name          = Agendamento
tree.job.schedules.node.name         = Agendamentos
tree.job.step.node.name              = Etapa
tree.job.steps.node.name             = Etapas
tree.jobs.node.description           = Lista de tarefas agendadas a serem executados pelo pgAgent.
tree.jobs.node.name                  = Tarefas
tree.language.node.name              = Linguagem
tree.languages.node.name             = Linguagens
tree.locks.node.name                 = Travas
tree.locks.node.tip                  = Gerenciador de travas de servidor
tree.mview.node.name                 = View materializada
tree.mviews.node.name                = Views materializadas
tree.mviews.node.tip                 = Views materializadas
tree.opClass.node.name               = Classe de operador
tree.opClasses.node.name             = Classes de operador
tree.opFamilies.node.name            = Famílias de operador
tree.opFamily.node.name              = Família de operador
tree.package.node.name               = Pacote
tree.packages.node.name              = Pacotes
tree.partition.node.name             = Partição
tree.partition_columns.node.name     = Colunas de partição
tree.partitions.node.name            = Partições
tree.partitions.node.tip             = Partições de tabela
tree.policies.node.name              = Políticas
tree.policies.node.tip               = Políticas RLS
tree.policy.node.name                = Política
tree.policy.node.tip                 = Política RLS
tree.procedure.node.name             = Function
tree.procedure_columns.node.name     = Parâmetro de function
tree.procedures.node.name            = Functions
tree.procedures.node.tip             = Functions e procedures
tree.reference.node.name             = Referência
tree.reference_columns.node.name     = Colunas de refêrencia
tree.references.node.name            = Referências
tree.references.node.tip             = Refêrencias de tabela
tree.role.belong.node.name           = Role
tree.role.belongs.node.name          = Role
tree.role.belongs.node.tip           = Pertence
tree.role.member.node.name           = Role
tree.role.members.node.name          = Membros
tree.role.members.node.tip           = Membros
tree.role.node.name                  = Role
tree.roles.node.name                 = Roles
tree.roles.node.tip                  = Roles e usuários
tree.rule.node.name                  = Regra
tree.rules.node.name                 = Regras
tree.rules.node.tip                  = Regras de tabela
tree.schema.node.name                = Esquema
tree.schemas.node.name               = Esquemas
tree.schemas.node.tip                = Esquemas
tree.sequence.node.name              = Sequência
tree.sequences.node.name             = Sequências
tree.sequences.node.tip              = Sequências
tree.sessions.node.name              = Sessões
tree.setting.node.name               = Configuração
tree.settings.node.name              = Configurações
tree.storage.node.name               = Armazenamento
tree.storage.node.tip                = Gerência de armazenamento
tree.table.node.name                 = Tabela
tree.tablechildren.node.name         = Tabelas filhas
tree.tablechildren_columns.node.name = Colunas da tabelas filhas
tree.tables.node.name                = Tabelas
tree.tables.node.tip                 = Tabelas
tree.tablespace.node.name            = Tablespace
tree.tablespaces.node.name           = Tablespace
tree.trigger.node.name               = Trigger
tree.triggers.node.name              = Triggers
tree.triggers.node.tip               = Triggers de tabela
tree.tview.node.name                 = View
tree.tviews.node.name                = Views
tree.tviews.node.tip                 = Views
tree.type.node.name                  = Tipo de dados
tree.types.node.name                 = Tipos de dados
tree.types.node.tip                  = Tipos de dados
tree.userMapping.node.name           = Mapeamento de usuário
tree.userMappings.node.name          = Mapeamentos de usuários
