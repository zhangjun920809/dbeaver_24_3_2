datasource.postgresql.description = PostgreSQL JDBC Connector
driver.cockroach.description = CockroachDB JDBC Treiber
driver.postgresql.description = PostgreSQL Standardtreiber
driver.materialize.description = Materialize JDBC Treiber
driver.timescale.description = Timescale JDBC Treiber
driver.yellowbrick.description = Yellowbrick JDBC Treiber
driver.yugabytedb.description = YugabyteDB JDBC Treiber
driver.cratedb.description = CrateDB JDBC Treiber
handler.ssl.description = Secure socket layer
handler.ssl.name = SSL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description = Unterstützt die Zugriffsmethode das Rückwärtsscannen?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name = Kann rückwärts scannen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description = Unterstützt die Zugriffsmethode mehrspaltige Indizes?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name = Kann mehrspaltig sein
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description = Unterstützt die Zugriffsmethode geordnete Scans, die nach dem Wert der indizierten Spalte sortiert sind?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name = Kann sortieren
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description = Unterstützt die Zugriffsmethode geordnete Scans, sortiert nach dem Ergebnis eines Operators in der indizierten Spalte?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name = Kann sortiert werden von op
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description = Unterstützt die Zugriffsmethode eindeutige Indizes?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name = Kann einzigartig
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description = Kann ein solcher Index mit einem Cluster versehen werden?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name = Clusterfähig
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description = OID einer Handlerfunktion, die für die Bereitstellung von Informationen über die Zugriffsmethode verantwortlich ist
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name = Handler
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description = Name der Zugriffsmethode
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description = Zeilenkennung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description = Anzahl der Bedienerstrategien für dieses Zugriffsverfahren oder Null, wenn das Zugriffsverfahren keinen festen Satz von Bedienerstrategien hat
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name = Strategien
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description = Unterstützt die Zugriffsmethode einen Scan ohne Einschränkung für die erste Indexspalte?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name = Optionaler Schlüssel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description = Verwaltet ein solcher Index feinkörnige Prädikatssperren?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name = Prädikatssperren
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description = Unterstützt die Koppelart die Suche nach ScalararrayArrayOpExpr?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name = Sucharray
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description = Unterstützt die Koppelart IS NULL/NOT NULL Suchen?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name = Suche Nullen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description = Kann sich der Indexspeicherdatentyp vom Spaltendatentyp unterscheiden?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name = Speicherung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description = Anzahl der Unterstützungsroutinen für diese Zugriffsmethode
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name = Unterstützungsroutinen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description = Derzeit immer i, um eine Indexzugriffsmethode anzugeben; andere Werte können in Zukunft erlaubt sein
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description = Aggregierter Funktionskommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description = Funktionsdefinition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name = Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description = Eingabedatentypen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name = Eingänge
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description = Name der aggregierten Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description = Funktionsobjekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description = Ausgabedatentyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name = Ausgabetyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description = Die definierte Sortierung der Spalte oder NULL, wenn die Spalte keinen sortierbaren Datentyp hat.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name = Kollation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.description = Spaltendatentyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.name = Datentyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name = Standard
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description = Attribut-Identität (immer oder standardmäßig)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name = Identität
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description = Diese Spalte ist lokal in der Beziehung definiert. Beachten Sie, dass eine Spalte lokal definiert und gleichzeitig vererbt werden kann.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name = Lokal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description = Wenn der Datentyp den Typ eines Textes oder einer Bitfolge angibt, gibt dieses Feld die deklarierte maximale Länge an. NULL für alle anderen Datentypen oder wenn die maximale Länge nicht deklariert ist.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name = Länge
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description = Attribut eindeutige Objekt-ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description = Wenn der Datentyp einen numerischen Typ enthält, enthält diese Spalte die Genauigkeit (deklariert oder implizit) des Typs für die Zielspalte.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name = Präzision
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description = Nicht Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name = Nicht Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.name=Intervalltyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description = Die Skala bestimmt die Anzahl der signifikanten Stellen rechts vom Dezimalpunkt.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name = Skalierung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name = Beschreibung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description = Installierte Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name = Installierte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description = Name der Erweiterung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description = Erweiterungsversion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name = Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description = LC_COLLATE für dieses Kollatierungsobjekt
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name = Sortieren
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description = LC_CTYPE für dieses Kollatierungsobjekt
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name = CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description = Codierung, bei der die Sortierung anwendbar ist, oder -1, wenn sie für eine Codierung funktioniert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name = Codierung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description = Sortierungsname (eindeutig pro Namespace und Codierung)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name = Provider
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description = Der Namespace, der diese Sortierung enthält
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name = Ausrichten
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name = Funktion analysieren
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name = Array-Trennzeichen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name = Array-Dimension
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name = Array-Elementtyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name = Basistyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name = Nach Wert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name = Kollations-ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description = Einschränkung (für Domänentypen)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name = Einschränkung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name = Standardwert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name = Elementtyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description = Liste der möglichen Aufzählungswerte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name = Aufzählungswert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name = Eingangsfunktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name = Mod in Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name = Mod Out Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name = Nicht Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.objectId.name = ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name = Ausgangsfunktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name = Bevorzugt
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name = Empfangsfunktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name = Sendefunktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name = Speicherung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name = Kategorietyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name = Modtyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name = Typtyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name = Verbinden erlauben
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name = Sortieren
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name = Verbindungslimit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name = Ctyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name = DBA
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name = Standardenkodierung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name = Standard-Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name = Beschreibung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name = Vorlage
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name = Abhängigkeit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name = Tabelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name = Bedingungen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description = Name der Erweiterung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description = Kann verlegt werden
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name = Verschiebbar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description = Installiertes Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description = Tabellen verwenden
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name = Tabellen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description = Installierte Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name = Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name = Handler
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name = Optionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name = Validierer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name = Fremddatenwrapper
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name = Optionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name = Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name = Manipulation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name = Orierntierung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name = Timing
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description = Zugriffsmethode
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name = Zugriffsmethode
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name = Überprüfe X Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name = Gruppiert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description = Wenn true, unterstützt dieser Index einen Einschränkungsausschluss
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name = Ausschluss
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description = Wenn true, wird die Eindeutigkeitsprüfung direkt beim Hinzufügen von Daten durchgeführt (gilt nicht, wenn unique nicht true ist).
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name = Sofort
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description = Anzahl der sequentiellen Scans, die durchgeführt werden, wenn das Argument eine Tabelle ist, oder Anzahl der Index-Scans, die durchgeführt werden, wenn das Argument ein Index ist
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name = Num Scans
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description = Vom Index verwendeter Speicherplatz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description = Indexdefinition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.name = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description = Ausdrucksbaum für das Teilindexprädikat. Null, wenn kein Teilindex.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name = Prädikat
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description = Dieser Index stellt den Primärschlüssel der Tabelle dar (in diesem Fall muss das eindeutige Feld auch wahr sein).
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name = Primär
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description = Wenn true, kann der Index Daten hinzufügen. Der Wert false gibt an, dass der Index für INSERTS / UPDATES ignoriert wird.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name = Bereit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description = Index-Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description = Einzigartiger Index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name = Einzigartig
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description = Wenn true, kann der Index in Abfragen verwendet werden. False bedeutet, dass der Index möglicherweise unvollständig ist. Er wird jedoch durch die Befehle INSERT / UPDATE geändert, kann jedoch sicher in Abfragen verwendet werden, die nicht möglich sind. Wenn es eindeutig ist, kann die Einzigartigkeitseigenschaft ebenfalls nicht garantiert werden.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name = Valide
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name = Aufsteigend
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name = Nicht löschbar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name = Operatorklasse
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name = Ordinale Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name = Tabellenspalte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name = Handler ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name = Inline-Handler ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name = Eigentümer ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name = Vertrauenswürdig
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name = Benutzerdefiniert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name = Validator-ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description = Materialisierter Ansicht-Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.description = Mit [NO] Daten
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name = Bestückt
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name = Standard
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name = Familie
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name = Schlüsseltyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name = Aggregat
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name = Körper
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name = Est Reihen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name = Ausführungskosten
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name = Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name = Sprache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description = Die Funktion hat keine Nebenwirkungen. Es werden keine Informationen zu den Argumenten angegeben, außer über den Rückgabewert. Jede Funktion, die abhängig von den Argumentwerten einen Fehler verursachen kann, ist nicht dicht.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name = Auslaufsicher
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description = Eigentümer der Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name = Prozesstransformation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description = Die Eigenschaft "volatile" gibt an, ob das Ergebnis einer Funktion nur von ihren Eingabeargumenten abhängt oder von externen Faktoren beeinflusst wird.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name = Prozessvolatilität
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name = Rückgabewert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description = Die Funktion gibt eine Menge zurück (dh eine Menge von Werten des angegebenen Datentyps).
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name = Rückgabesatz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name = Sicherheitsdefinition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description = Die Funktion gibt NULL zurück, wenn eines der Argumente NULL ist. In diesem Fall wird die Funktion überhaupt nicht aufgerufen. Funktionen, die nicht "streng" sind, müssen darauf vorbereitet sein, NULL-Werte zu akzeptieren.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name = Strikt
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name = Var-Array-Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name = Fenster
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description = Parameterstandardwert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name = Standard
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name = Ordinale Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name = Parameterart
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name = Parametertyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name = Bypass Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name = Kann sich anmelden
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name = Verbindungslimit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name = Erstelle Datenbank
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name = Erstelle Rolle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name = Vererben
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name = Password
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name = Nachbildung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name = Super User
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name = Gültig bis
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.description.name=Beschreibung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name = Administrationsoption
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name = Stifter
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name = Rolle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description = Steuert, in welchen Modi session_replication_role die Regel ausgelöst wird. O = Regel wird im Modus "origin" und "local" ausgelöst, D = Regel ist deaktiviert, R = Regel wird im Modus "replika" ausgelöst, A = Regel wird immer ausgelöst.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name = Aktiviert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description = True, wenn die Regel eine INSTEAD-Regel ist
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name = Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description = Regelname
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name = Definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description = Ereignistyp, für den die Regel gilt: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name = Datentypen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name = Datenbank
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description = Schemakommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description = Sequenzcache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name = Cache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description = Ob die Sequenzzyklen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name = Zyklisch
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description = Inkrementwert der Sequenz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name = Inkrement um
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description = Der letzte Sequenzwert, der auf die Festplatte geschrieben wurde.\r\nWenn Caching verwendet wird, kann dieser Wert größer sein als der letzte aus der Sequenz ausgegebene Wert.\r\nNull, wenn die Sequenz noch nicht ausgelesen wurde.\r\nWenn der aktuelle Benutzer kein USAGE- oder SELECT-Privileg für die Sequenz hat, ist der Wert auch Null.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name = Letzter Wert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description = Maximalwert der Sequenz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name = Maximalwert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description = Minimalwert der Sequenz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name = Minimalwert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name = Hat Oids
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description = Partitionstabelle nach
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name = Partition nach
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name = Partition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name = Untertabellen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name = Supertabellen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description = Tabellenbesitzer (Ersteller)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description = Zugriffsmethodenspezifische Optionen, als "keyword=value" Zeichenketten
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name = Zusatzoptionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description = Ausdruck von CHECK-Beschränkungen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name = Ausdruck
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description = Ist die Einschränkung aufschiebbar?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name = Aufschiebbar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description = Wird die Einschränkung standardmäßig verschoben?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name = Aufgeschoben
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description = Einschränkungskommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name = Kommentar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description = Definitionstext der Einschränkung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.name = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name = Attribut
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name = Ordinale Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name = Fremdoptionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name = Fremdserver
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name = Assoziierte Einheit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description = Löschregel für Fremdschlüsseleinschränkung: CASCADE, SET NULL, SET DEFAULT, RESTRICT, oder NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name = Gelöschte Regel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description = MATCH FULL lässt nicht zu, dass eine Spalte eines mehrspaltigen Fremdschlüssels null ist, es sei denn, alle Fremdschlüsselspalten sind null. \n MATCH SIMPLE erlaubt, dass einige Fremdschlüsselspalten null sind, während andere Teile des Fremdschlüssels nicht null sind. 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name = Übereinstimmungstyp
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description = Referenzierte Einschränkung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name = Referenzierte Einschränkung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description = Die Änderungsregel für eine Fremdschlüsseleinschränkung lautet CASCADE, SET NULL, SET DEFAULT, RESTRICT, oder NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name = Updateregel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name = Referenzierte Spalte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description = Assoziierte Einheit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name = Assoziierte Einheit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name = Sequenznummer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partKeys.name = Partitionsschlüssel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name = Partitionsausdruck
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description = Festplattenspeicherplatz, der von der angegebenen Tabelle verwendet wird, einschließlich aller Indizes und TOAST-Daten
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name = Festplattenspeicherplatz
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description = Festplattenspeicherplatz der vom fork 'main' verwendet wird
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name = Beziehungsgröße
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name = Anzahl der Zeilen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name = Schätzung der Zeilenzahl
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name = Ort
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name = Optionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name = Eigentümer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name = Timing
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description = Spaltennamen der Tabelle, wenn der Trigger spaltenspezifisch ist.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name = Spalte(n)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name = Beschreibung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description = Steuert, in welcher session_replication_role der Trigger modelliert wird.\r\nO = Trigger löst im "Origin"- und "Local"-Modus aus, \r\nD = Trigger ist deaktiviert, \r\nR = Trigger feuert im "Replica"-Modus, \r\nA = Trigger feuert immer.\r\n
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name = Aktiviert
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description = Die aufzurufende Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name = Funktion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name = Manipulation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name = Objekt ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name = Tabelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description = Auslösertyp (ROW oder STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description = Ausdruck für die WHEN-Bedingung des Triggers
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name = WHEN Ausdruck
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name = Fremdserver
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.name.name = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name = Serveroptionen
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name = Optionen zur Benutzerzuordnung
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name = Quelle
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name = Externe Optionen
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name = Komprimiert
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name = Eingabeformat
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name = Ort
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name = Ausgabeformat
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name = Parameter
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serdeParameters.name = Serde-Parameter
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name = Serialisierung
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description = Kodierung der Spalte. Die Art der Komprimierung, die auf eine Spalte mit Datenwerten als Zeilen angewendet wird, wird einer Tabelle hinzugefügt.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name = Codierung
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description = True, wenn diese Spalte der Verteilungsschlüssel für die Tabelle ist.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description = Reihenfolge der Spalte im Sortierschlüssel.\r\nWenn die Tabelle einen zusammengesetzten Sortierschlüssel verwendet, haben alle Spalten, die Teil des Sortierschlüssels sind, einen positiven Wert, der die Position der Spalte im Sortierschlüssel angibt.\r\nWenn die Tabelle einen verschachtelten Sortierschlüssel verwendet, hat jede Spalte, die Teil des Sortierschlüssels ist, einen Wert, der abwechselnd positiv oder negativ ist, wobei der absolute Wert die Position der Spalte im Sortierschlüssel angibt.\r\nBei 0 ist die Spalte nicht Teil eines Sortierschlüssels.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name = Halte-PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name = Halte-Benutzer
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.name = Hold-Statement
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name = Warte-PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.name = Warte-Statement
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name = Warte-Benutzer
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name = Schmea
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description = Seite / Tupel
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name = Seite/Tpl
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description = Gewährt
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name = +
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name = Typ
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.name = Modus
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description = Relation
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.name = Rel.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description = Transaktions ID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name = TID
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name = Reihen
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name = Kosten
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description = Entität
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name = Entität
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name = Bedingung
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description = Knotentyp
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name = Knotentyp
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name = Zeit
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name = Appname
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name = Startbackend
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name = Kurze Anfrage
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name = Clienthost
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name = Clientport
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name = Datenbank
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name = Abfragestart
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name = Status
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name = Statusänderung
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name = Benutzer
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name = Xact Start
provider.data.type.postgresql.description = Anbieter von PostgreSQL-Datentypen
provider.data.type.postgresql.name = Anbieter von PostgreSQL-Datentypen
tools.analyze.description = Analysiere Tabelle(n)
tools.analyze.name = Analysieren
tools.backup.db.description = Export
tools.backup.db.name = Backup
tools.execute.script.description = Skript mit nativem Client ausführen
tools.execute.script.name = Skript ausführen
tools.refesh.mview.description = Aktualisieren der materialisierten Sicht(en)
tools.refesh.mview.name = Materialisierte Ansicht aktualisieren
tools.restore.db.description = Import
tools.restore.db.name = Wiederherstellen
tools.truncate.description = Tabelle(n) abschneiden
tools.truncate.name = Verkürzen
tools.vacuum.description = Vakuum Tabelle(n)
tools.vacuum.name = Vakuum
tree.accessMethod.node.name = Zugriffsmethode
tree.accessMethods.node.name = Zugriffsmethoden
tree.administer.node.name = Verwalten
tree.administer.node.tip = Verwalten
tree.aggregate.node.name = Aggregatfunktion
tree.aggregates.node.name = Aggregierte Funktionen
tree.aggregates.node.tip = Aggregierte Funktionen
tree.attribute.node.name = Attribut
tree.attributes.node.name = Attribute
tree.avalextension.node.name = Verfügbare Erweiterung
tree.avalextensions.node.name = Verfügbare Erweiterungen
tree.collation.node.name = Zusammenstellung
tree.collations.node.name = Zusammenstellungen
tree.column.node.name = Spalte
tree.columns.node.name = Spalten
tree.columns.node.tip = Tabellenspalten
tree.constraint.columns.node.name = Begrenzungsspalten
tree.constraint.node.name = Einschränkung
tree.constraints.node.name = Einschränkungen
tree.constraints.node.tip = Tabelle eindeutige Schlüssel
tree.database.node.name = Datenbank
tree.databases.node.name = Datenbanken
tree.dependencies.node.name = Abhängigkeiten
tree.dependencies.node.tip = Tabellenabhängigkeiten
tree.dependency.node.name = Abhängigkeit
tree.encoding.node.name = Kodierung
tree.encodings.node.name = Kodierungen
tree.extension.node.name = Erweiterung
tree.extensions.node.name = Erweiterungen
tree.extensions.node.tip = Datenbankerweiterungen
tree.foreignDataWrapper.node.name = Fremd Datenwrapper
tree.foreignDataWrappers.node.name = Fremd Datenwrapper
tree.foreignServer.node.name = Fremdserver
tree.foreignServers.node.name = Fremdserver
tree.foreign_key.node.name = Fremdschlüssel
tree.foreign_key.node.tip = Fremdschlüssel
tree.foreign_key_columns.node.name = Fremdschlüsselspalte
tree.foreign_keys.node.name = Fremdschlüssel
tree.index.node.name = Index
tree.index_columns.node.name = Indexspalten
tree.indexes.node.name = Indizes
tree.indexes.node.tip = Indizes
tree.information.node.name = Systeminfo
tree.information.node.tip = Information
tree.language.node.name = Sprache
tree.languages.node.name = Sprachen
tree.locks.node.name = Sperren
tree.locks.node.tip = Server sperrt Manager
tree.mview.node.name = Materialisierte Ansicht
tree.mviews.node.name = Materialisierte Ansichten
tree.mviews.node.tip = Materialisierte Ansichten
tree.opClass.node.name = Operatorklasse
tree.opClasses.node.name = Operatorklassen
tree.opFamilies.node.name = Operatorfamilien
tree.opFamily.node.name = Operatorfamilie
tree.package.node.name = Paket
tree.packages.node.name = Pakete
tree.partition.node.name = Partition
tree.partition_columns.node.name = Partitionsspalte
tree.partitions.node.name = Partitionen
tree.partitions.node.tip = Partitionen
tree.procedure.node.name = Funktion
tree.procedure_columns.node.name = Funktionsparameter
tree.procedures.node.name = Funktionen
tree.procedures.node.tip = Funktionen und Verfahren
tree.reference.node.name = Referenz
tree.reference_columns.node.name = Referenzspalte
tree.references.node.name = Referenzen
tree.references.node.tip = Tabellenreferenzen
tree.role.belong.node.name = Rolle
tree.role.belongs.node.name = Rollen
tree.role.belongs.node.tip = Gehört
tree.role.member.node.name = Rolle
tree.role.members.node.name = Mitglieder
tree.role.members.node.tip = Mitglieder
tree.role.node.name = Rolle
tree.roles.node.name = Rollen
tree.roles.node.tip = Rollen und Benutzer
tree.rule.node.name = Regel
tree.rules.node.name = Regeln
tree.rules.node.tip = Tabellenregeln
tree.rules_columns.node.name = Regelspalte
tree.schema.node.name = Schema
tree.schemas.node.name = Schemata
tree.schemas.node.tip = Schemata
tree.sequence.node.name = Sequenz
tree.sequences.node.name = Sequenzen
tree.sessions.node.name = Sitzungen
tree.storage.node.name = Lager
tree.storage.node.tip = Lagerverwaltung
tree.table.node.name = Tabelle
tree.tablechildren.node.name = Kindtabellen
tree.tablechildren_columns.node.name = Kindtabellenspalten
tree.tables.node.name = Tabellen
tree.tablespace.node.name = Tablespace
tree.tablespaces.node.name = Tablespaces
tree.trigger.node.name = Trigger
tree.triggers.node.name = Trigger
tree.tview.node.name = Ansicht
tree.tviews.node.name = Ansichten
tree.type.node.name = Datentyp
tree.types.node.name = Datentypen
tree.userMapping.node.name = Benutzerzuordnung
tree.userMappings.node.name = Benutzerzuordnungen

# tool analyze #
tasks.analyze.database.node.name = Datenbank analysieren
tasks.analyze.table.node.name = Tabelle analysieren
tasks.analyze.table.node.description = Tabelle(n) analysieren

# tool refresh mat view #
tasks.mview.refresh.node.name = Materialisierte Sicht aktualisieren
tasks.mview.refresh.node.description = Materialisierte Sicht(en) aktualisieren
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.name = Mit Daten
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.description = Wenn "Mit Daten" angegeben ist (oder Standardwerte), wird die Sicherungsabfrage ausgeführt, um die neuen Daten bereitzustellen, und die materialisierte Ansicht wird in einem scanbaren Zustand belassen.\r\nWenn "Mit keinen Daten" angegeben wird, werden keine neuen Daten erzeugt und die materialisierte Ansicht wird in einem nicht scanbaren Zustand belassen.

meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolWithStatus$ToolStatus.message.name = Meldung

# tool truncate
tasks.truncate.node.name = Tabelle abschneiden
tasks.truncate.node.description = Tabelle(n) abschneiden
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.name = In einer separaten Transaktion ausführen
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.description = Tool in einer separaten Transaktion ausführen. Bestätigen der aktiven Transaktion\n vor der Werkzeugausführung und bestätigen nach erfolgreicher Werkzeugausführung
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.name = Identität neu starten
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.description = Startet automatisch Sequenzen neu, die zu den Spalten der abgeschnittenen Tabelle(n) gehören.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.name = Kaskade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.description = Automatisches Abschneiden aller Tabellen, die Fremdschlüsselreferenzen auf eine der genannten Tabellen\n oder auf Tabellen haben, die aufgrund von CASCADE zur Gruppe hinzugefügt wurden.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.name = Nur
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.description = Wenn "Nur" nicht angegeben ist, werden die Tabelle und alle ihre Nachfolgetabellen (falls vorhanden) abgeschnitten.

# tool vacuum #
tasks.vacuum.table.node.name = Vacuum Tabelle
tasks.vacuum.table.node.description = Vacuum Tabelle(n)
tasks.vacuum.database.node.name = Vacuum Datenbank
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.name = Volles
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.description =  Wählt "volles" Vakuum, das mehr Speicherplatz zurückgewinnen kann, aber viel länger dauert und die Tabelle exklusiv sperrt.\r\nDiese Methode benötigt auch zusätzlichen Festplattenspeicher, da bei dieser Methode eine neue Kopie der Tabelle erstellt wird und die alte Kopie erst nach Abschluss des Vorgangs freigegeben wird.\r\nNormalerweise sollte dies nur dann verwendet werden, wenn ein erheblicher Teil des Platzes innerhalb der Tabelle zurückgewonnen werden muss.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.name = Einfrieren
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.description = Wählt das aggressive "Einfrieren" von Tupeln. Die Angabe von FREEZE entspricht der Durchführung von VACUUM, wobei die Parameter vacuum_freeze_min_age und vacuum_freeze_table_age auf Null gesetzt sind.\r\nDas aggressive Einfrieren wird immer beim Neuschreiben der Tabelle durchgeführt, so dass diese Option bei Angabe von FULL redundant ist.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.name = Analysiert
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.description = Aktualisiert die Statistiken, die vom Planer verwendet werden, um die effizienteste Art der Ausführung einer Abfrage zu bestimmen.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.name = Disable page skipping
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.description = Normalerweise überspringt VACUUM Seiten, die auf der Sichtbarkeitskarte basieren.\r\nSeiten, bei denen bekannt ist, dass alle Tupel eingefroren sind, können immer übersprungen werden, und solche, bei denen bekannt ist, dass alle Tupel für alle Transaktionen sichtbar sind, können übersprungen werden, außer wenn ein aggressives Vakuum durchgeführt wird.\r\nDarüber hinaäöpus können, außer bei der Durchführung eines aggressiven Vakuums, einige Seiten übersprungen werden, um nicht darauf zu warten, dass andere Sitzungen ihre Verwendung beenden.\r\nDiese Option deaktiviert das gesamte Verhalten beim Überspringen von Seiten und ist dafür vorgesehen, nur den Inhalt der Sichtbarkeitskarte als verdächtig zu betrachten, was nur geschehen sollte, wenn es ein Hardware- oder Softwareproblem gibt, das zu einer Beschädigung der Datenbank führt.
