
dataTransfer.consumer.database.description                                              = 数据库表
dataTransfer.consumer.database.name                                                     = 数据库
dataTransfer.consumer.stream.description                                                = 平面文件
dataTransfer.consumer.stream.name                                                       = 文件
dataTransfer.eventProcessor.executeCommand.description                                  = 完成时执行 shell 命令
dataTransfer.eventProcessor.executeCommand.label                                        = 执行过程
dataTransfer.eventProcessor.showInExplorer.description                                  = 完成后在系统资源管理器中显示导出的文件
dataTransfer.eventProcessor.showInExplorer.label                                        = 在系统资源管理器中显示导出的文件
dataTransfer.processor.csv.description                                                  = 导出到 CSV 文件
dataTransfer.processor.csv.name                                                         = CSV
dataTransfer.processor.csv.property.delimiter.description                               = 列分隔符。 您可以使用特殊字符 \\ + t,n,r
dataTransfer.processor.csv.property.delimiter.name                                      = 分隔符
dataTransfer.processor.csv.property.escape.description                                  = 不良字符转义模型（用引号括起来或用“\\”字符转义）
dataTransfer.processor.csv.property.escape.name                                         = 字符转义
dataTransfer.processor.csv.property.extension.label                                     = 文件扩展名
dataTransfer.processor.csv.property.formatNumbers.description                           = 使用地区设置格式化数字值
dataTransfer.processor.csv.property.formatNumbers.name                                  = 格式化数字
dataTransfer.processor.csv.property.header.description                                  = CSV 表头设置
dataTransfer.processor.csv.property.header.name                                         = 表头
dataTransfer.processor.csv.property.headerFormat.description                            = 表头格式
dataTransfer.processor.csv.property.headerFormat.name                                   = 表头格式
dataTransfer.processor.csv.property.nullString.description                              = 用来替换NULL值的字符串
dataTransfer.processor.csv.property.nullString.name                                     = NULL字符串
dataTransfer.processor.csv.property.quoteAlways.description                             = 将所有单元格值加上引号  (不能与“永不括起字符”一起使用)
dataTransfer.processor.csv.property.quoteAlways.name                                    = 总是括起字符
dataTransfer.processor.csv.property.quoteChar.description                               = 用来括起字符串的字符（空白代表不括起）
dataTransfer.processor.csv.property.quoteChar.name                                      = 括起字符
dataTransfer.processor.csv.property.quoteNever.description                              = 不要把单元格值加上引号。 不能与“总是括起字符”一起使用
dataTransfer.processor.csv.property.quoteNever.name                                     = 永不括起字符
dataTransfer.processor.csv.property.rowDelimiter.description                            = 行分隔符。 默认是系统特定的换行分隔符。 您可以使用特殊字符 \\ + t,n,r
dataTransfer.processor.csv.property.rowDelimiter.name                                   = 行分隔符
dataTransfer.processor.csv.propertyGroup.general.label                                  = 通用
dataTransfer.processor.dbunit.description                                               = 导出到 DbUnit XML 文件
dataTransfer.processor.dbunit.property.extension.label                                  = 文件扩展名
dataTransfer.processor.dbunit.property.include.null.values.label                        = 在导出中包含 NULL 值
dataTransfer.processor.dbunit.property.null.value.string.label                          = 将 NULL 值替换为
dataTransfer.processor.dbunit.property.uppercase.column.names.label                     = 强制大写列名
dataTransfer.processor.dbunit.property.uppercase.table.name.label                       = 强制大写表名
dataTransfer.processor.dbunit.propertyGroup.general.label                               = 常规
dataTransfer.processor.html.description                                                 = 导出到 HTML 文件
dataTransfer.processor.html.name                                                        = HTML
dataTransfer.processor.html.property.columnHeaders.description                          = 在生成的表格中输出列名作为额外的行
dataTransfer.processor.html.property.columnHeaders.name                                 = 输出列标题
dataTransfer.processor.html.property.extension.label                                    = 文件扩展名
dataTransfer.processor.html.property.header.description                                 = 将查询或表名输出为生成的表中的第一行
dataTransfer.processor.html.property.header.name                                        = 输出表头
dataTransfer.processor.html.property.images.description                                 = 提取图片到图形文件
dataTransfer.processor.html.property.images.name                                        = 图片
dataTransfer.processor.html.propertyGroup.general.label                                 = 通用
dataTransfer.processor.json.description                                                 = 导出到 JSON 文件
dataTransfer.processor.json.name                                                        = JSON
dataTransfer.processor.json.property.extension.label                                    = 文件扩展名
dataTransfer.processor.json.property.formatDateISO.label                                = 用 ISO 8601 格式化数据
dataTransfer.processor.json.property.printTableName.label                               = 打印表名
dataTransfer.processor.json.propertyGroup.general.label                                 = 通用
dataTransfer.processor.markdownTable.description                                        = 导出到 Markdown 文件
dataTransfer.processor.markdownTable.property.confluenceFormat.description              = 使用 Confluence 格式（表头的特殊格式，没有分隔线）。
dataTransfer.processor.markdownTable.property.confluenceFormat.name                     = Confluence 格式
dataTransfer.processor.markdownTable.property.extension.label                           = 文件扩展名
dataTransfer.processor.markdownTable.property.formatNumbers.description                 = 使用地区设置格式化数字值
dataTransfer.processor.markdownTable.property.formatNumbers.name                        = 格式化数字
dataTransfer.processor.markdownTable.property.nullString.description                    = 将被用来代替 NULL 值的字符串
dataTransfer.processor.markdownTable.property.nullString.name                           = NULL 字符串
dataTransfer.processor.markdownTable.property.showHeaderSeparator.description           = 打印标题分隔符（---）。对于 GitHub markdown 是必需的。
dataTransfer.processor.markdownTable.property.showHeaderSeparator.name                  = 显示标题分隔符
dataTransfer.processor.markdownTable.propertyGroup.general.label                        = 常规
dataTransfer.processor.source.code.description                                          = 导出到源码数组
dataTransfer.processor.source.code.name                                                 = 源码
dataTransfer.processor.source.code.property.extension.label                             = 文件扩展名
dataTransfer.processor.source.code.property.formatDateISO.label                         = 按照 ISO 8601 格式化日期
dataTransfer.processor.source.code.property.language.description                        = 编程语言
dataTransfer.processor.source.code.property.language.name                               = 语言
dataTransfer.processor.source.code.property.quoteChar.description                       = 用于引用字符串的字符
dataTransfer.processor.source.code.property.quoteChar.name                              = 引号字符
dataTransfer.processor.source.code.property.rowDelimiter.description                    = 行分隔符。默认是系统特定的换行分隔符。\r\n你可以使用特殊字符（\\t,\\n,\\r）
dataTransfer.processor.source.code.property.rowDelimiter.name                           = 行分隔符
dataTransfer.processor.source.code.propertyGroup.general.label                          = 常规
dataTransfer.processor.sql.description                                                  = 导出到 SQL INSERT 语句
dataTransfer.processor.sql.name                                                         = SQL
dataTransfer.processor.sql.property.escape.description                                  = 转义单引号字符的字符
dataTransfer.processor.sql.property.escape.name                                         = 转义字符
dataTransfer.processor.sql.property.extension.label                                     = 文件扩展名
dataTransfer.processor.sql.property.identifierCase.description                          = 您可以选择将表名和列名小写或大写
dataTransfer.processor.sql.property.identifierCase.name                                 = 标识符大小写
dataTransfer.processor.sql.property.includeAutoGenerated.description                    = 在 INSERT 语句中包含自动生成的列（比如: 自增列）
dataTransfer.processor.sql.property.includeAutoGenerated.label                          = 包含生成的列
dataTransfer.processor.sql.property.insertOnConflict.description                        = 语句结尾的表达式。此为数据库特定设置，请按照数据库的要求输入所需的值
dataTransfer.processor.sql.property.insertOnConflict.name                               = On conflict 表达式
dataTransfer.processor.sql.property.keywordCase.description                             = 您可以选择关键字的小写或大写
dataTransfer.processor.sql.property.keywordCase.name                                    = 关键字大小写
dataTransfer.processor.sql.property.lineBeforeRows.description                          = 在 values从句中的每行数据前加上换行符（适用于单条语句插入多行数据）
dataTransfer.processor.sql.property.lineBeforeRows.name                                 = 在每行数据前加换行符
dataTransfer.processor.sql.property.nativeFormat.description                            = 在 INSERT 语句中使用本地日期时间格式
dataTransfer.processor.sql.property.nativeFormat.name                                   = 本地日期/时间
dataTransfer.processor.sql.property.omitSchema.description                              = 在 INSERT语句中省略模式/目录名称
dataTransfer.processor.sql.property.omitSchema.name                                     = 省略模式名
dataTransfer.processor.sql.property.rowsInStatement.description                         = 每个insert语句的数据行数
dataTransfer.processor.sql.property.rowsInStatement.name                                = 每条语句的数据行数
dataTransfer.processor.sql.property.upsertKeyword.description                           = 你可以选择不同的 Upsert 关键字
dataTransfer.processor.sql.property.upsertKeyword.name                                  = Upsert 关键字
dataTransfer.processor.sql.property.userTableName.name                                  = 目标表名
dataTransfer.processor.sql.propertyGroup.formatting.label                               = 格式化
dataTransfer.processor.sql.propertyGroup.general.label                                  = 通用
dataTransfer.processor.txt.description                                                  = 导出为纯文本格式
dataTransfer.processor.txt.property.batchSize.label                                     = 批量大小
dataTransfer.processor.txt.property.delimHeader.label                                   = 显示标题分隔符
dataTransfer.processor.txt.property.delimLeading.label                                  = 显示前导分隔符
dataTransfer.processor.txt.property.delimTrailing.label                                 = 显示尾部分隔符
dataTransfer.processor.txt.property.extension.label                                     = 文件扩展名
dataTransfer.processor.txt.property.maxColumnLength.label                               = 最大列长
dataTransfer.processor.txt.property.minColumnLength.label                               = 最小列长
dataTransfer.processor.txt.property.showHeader.label                                    = 打印表头
dataTransfer.processor.txt.property.showHeader.tip                                      = 在顶部打印列名称。\r\n您可以为多重导出禁用此设置以及标头分隔符设置
dataTransfer.processor.txt.property.showNulls.label                                     = 显示空值 (NULL)
dataTransfer.processor.txt.property.showNulls.tip                                       = 如果启用此设置则显示 NULL，如果禁用则不显示任何内容
dataTransfer.processor.txt.propertyGroup.general.label                                  = 常规
dataTransfer.processor.web.name                                                         = 网页浏览器
dataTransfer.processor.xml.description                                                  = 导出到 XML 文件
dataTransfer.processor.xml.name                                                         = XML
dataTransfer.processor.xml.property.extension.label                                     = 文件扩展名
dataTransfer.processor.xml.property.format.label                                        = 日期/数字 格式
dataTransfer.processor.xml.propertyGroup.general.label                                  = 通用
dataTransfer.producer.database.description                                              = 数据库表
dataTransfer.producer.database.name                                                     = 表
dataTransfer.producer.stream.description                                                = 平面文件
dataTransfer.producer.stream.name                                                       = 平面文件
dataTransfer.producer.stream.processor.csv.description                                  = 从 CSV 文件导入
dataTransfer.producer.stream.processor.csv.property.columnTypeMinimalLength.description = 最小列长
dataTransfer.producer.stream.processor.csv.property.columnTypeMinimalLength.name        = 最小列长
dataTransfer.producer.stream.processor.csv.property.columnTypeSamplesCount.description  = 用于猜测导入数据的长度和类型的样本数量。
dataTransfer.producer.stream.processor.csv.property.columnTypeSamplesCount.name         = 列样本数量
dataTransfer.producer.stream.processor.csv.property.columnTypeUseByteLength.description = 使用字节长度而不是字符串长度。\r\n字符串长度将给出一个字符串中的字符数。\r\n而字节长度将给出一个字符串中的字节数。
dataTransfer.producer.stream.processor.csv.property.columnTypeUseByteLength.name        = 列使用字节长度
dataTransfer.producer.stream.processor.csv.property.delimiter.description               = 列分隔符。您可以使用特殊字符（\\t,\\n,\\r）
dataTransfer.producer.stream.processor.csv.property.delimiter.name                      = 列分隔符
dataTransfer.producer.stream.processor.csv.property.emptyStringNull.description         = 空的字符串会被转换为空值。否则，它们将被转换为零长度的字符串
dataTransfer.producer.stream.processor.csv.property.emptyStringNull.name                = 将空字符串设置为 NULL
dataTransfer.producer.stream.processor.csv.property.encoding.label                      = 编码
dataTransfer.producer.stream.processor.csv.property.escapeChar.description              = 用于转义特殊字符的字符
dataTransfer.producer.stream.processor.csv.property.escapeChar.name                     = 转义字符
dataTransfer.producer.stream.processor.csv.property.extension.label                     = 扩展
dataTransfer.producer.stream.processor.csv.property.header.description                  = CSV的标题位置。标题用于提取列名
dataTransfer.producer.stream.processor.csv.property.header.name                         = 标题位置
dataTransfer.producer.stream.processor.csv.property.nullString.description              = 用作 NULL 值标记的字符串字面常量。\r\n这样的字符串在数据导入时将被转换为NULL。
dataTransfer.producer.stream.processor.csv.property.nullString.name                     = NULL 值标记
dataTransfer.producer.stream.processor.csv.property.quoteChar.description               = 用于引用值的字符
dataTransfer.producer.stream.processor.csv.property.quoteChar.name                      = 引用字符
dataTransfer.producer.stream.processor.csv.property.timestampFormat.description         = 日期/时间格式模式。用它来阐明 CSV 文件中的日期格式，而不是更改输出数据。\r\n搜索 "java DateTimeFormatter "了解格式详情。
dataTransfer.producer.stream.processor.csv.property.timestampFormat.name                = 日期/时间格式
dataTransfer.producer.stream.processor.csv.property.timestampZone.description           = 时区ID。默认使用本地机器的时区。\r\n有3种方法来指定时区。\r\n	-本地区域偏移(+3, -04:30)\r\n	-特定区域偏移（GMT+2, UTC+01:00）。\r\n	-基于地区的（UTC、ECT、PST等）。
dataTransfer.producer.stream.processor.csv.property.timestampZone.name                  = 时区ID
dataTransfer.producer.stream.processor.csv.property.trimWhitespaces.description         = 空白将被修剪以防止解析错误
dataTransfer.producer.stream.processor.csv.property.trimWhitespaces.name                = 修剪空白
dataTransfer.producer.stream.processor.csv.propertyGroup.general.label                  = 属性
dataTransfer.producer.stream.processor.csv.propertyGroup.sampling.label                 = 采样

extension-point.org.jkiss.dbeaver.dataTransfer.name = 数据传输提供者

task.category.description.common = 常见的数据库任务
task.category.name.common        = 常见的
task.description.export          = 数据导出任务
task.description.import          = 数据导入任务
task.description.sql.script      = 执行 SQL 脚本
task.name.export                 = 数据导出
task.name.import                 = 数据导入
task.name.sql.script             = SQL 脚本
